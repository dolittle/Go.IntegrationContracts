// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.18.1
// source: M3/Metadata/Metadata.proto

package metadata

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FieldType int32

const (
	FieldType_string FieldType = 0
	FieldType_number FieldType = 1
)

// Enum value maps for FieldType.
var (
	FieldType_name = map[int32]string{
		0: "string",
		1: "number",
	}
	FieldType_value = map[string]int32{
		"string": 0,
		"number": 1,
	}
)

func (x FieldType) Enum() *FieldType {
	p := new(FieldType)
	*p = x
	return p
}

func (x FieldType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FieldType) Descriptor() protoreflect.EnumDescriptor {
	return file_M3_Metadata_Metadata_proto_enumTypes[0].Descriptor()
}

func (FieldType) Type() protoreflect.EnumType {
	return &file_M3_Metadata_Metadata_proto_enumTypes[0]
}

func (x FieldType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FieldType.Descriptor instead.
func (FieldType) EnumDescriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{0}
}

type SortDirection int32

const (
	SortDirection_Ascending  SortDirection = 0
	SortDirection_Descending SortDirection = 1
)

// Enum value maps for SortDirection.
var (
	SortDirection_name = map[int32]string{
		0: "Ascending",
		1: "Descending",
	}
	SortDirection_value = map[string]int32{
		"Ascending":  0,
		"Descending": 1,
	}
)

func (x SortDirection) Enum() *SortDirection {
	p := new(SortDirection)
	*p = x
	return p
}

func (x SortDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SortDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_M3_Metadata_Metadata_proto_enumTypes[1].Descriptor()
}

func (SortDirection) Type() protoreflect.EnumType {
	return &file_M3_Metadata_Metadata_proto_enumTypes[1]
}

func (x SortDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SortDirection.Descriptor instead.
func (SortDirection) EnumDescriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{1}
}

type TableMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description    string            `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Columns        []*ColumnMetadata `protobuf:"bytes,3,rep,name=columns,proto3" json:"columns,omitempty"`
	PrimaryKey     *Index            `protobuf:"bytes,4,opt,name=primary_key,json=primaryKey,proto3" json:"primary_key,omitempty"`
	Indexes        []*Index          `protobuf:"bytes,5,rep,name=indexes,proto3" json:"indexes,omitempty"`
	ForeignKeys    []*ForeignKey     `protobuf:"bytes,6,rep,name=foreign_keys,json=foreignKeys,proto3" json:"foreign_keys,omitempty"`
	Component      string            `protobuf:"bytes,7,opt,name=component,proto3" json:"component,omitempty"`
	Category       string            `protobuf:"bytes,8,opt,name=category,proto3" json:"category,omitempty"`
	Environment    string            `protobuf:"bytes,10,opt,name=environment,proto3" json:"environment,omitempty"`
	DeploymentName string            `protobuf:"bytes,11,opt,name=deployment_name,json=deploymentName,proto3" json:"deployment_name,omitempty"`
}

func (x *TableMetadata) Reset() {
	*x = TableMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableMetadata) ProtoMessage() {}

func (x *TableMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableMetadata.ProtoReflect.Descriptor instead.
func (*TableMetadata) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{0}
}

func (x *TableMetadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TableMetadata) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TableMetadata) GetColumns() []*ColumnMetadata {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *TableMetadata) GetPrimaryKey() *Index {
	if x != nil {
		return x.PrimaryKey
	}
	return nil
}

func (x *TableMetadata) GetIndexes() []*Index {
	if x != nil {
		return x.Indexes
	}
	return nil
}

func (x *TableMetadata) GetForeignKeys() []*ForeignKey {
	if x != nil {
		return x.ForeignKeys
	}
	return nil
}

func (x *TableMetadata) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *TableMetadata) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *TableMetadata) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

func (x *TableMetadata) GetDeploymentName() string {
	if x != nil {
		return x.DeploymentName
	}
	return ""
}

type ColumnMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type          FieldType `protobuf:"varint,2,opt,name=type,proto3,enum=dolittle.integrations.m3.metadata.FieldType" json:"type,omitempty"`
	FieldLength   int32     `protobuf:"varint,3,opt,name=field_length,json=fieldLength,proto3" json:"field_length,omitempty"`
	DecimalPlaces int32     `protobuf:"varint,4,opt,name=decimal_places,json=decimalPlaces,proto3" json:"decimal_places,omitempty"`
}

func (x *ColumnMetadata) Reset() {
	*x = ColumnMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColumnMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColumnMetadata) ProtoMessage() {}

func (x *ColumnMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColumnMetadata.ProtoReflect.Descriptor instead.
func (*ColumnMetadata) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{1}
}

func (x *ColumnMetadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ColumnMetadata) GetType() FieldType {
	if x != nil {
		return x.Type
	}
	return FieldType_string
}

func (x *ColumnMetadata) GetFieldLength() int32 {
	if x != nil {
		return x.FieldLength
	}
	return 0
}

func (x *ColumnMetadata) GetDecimalPlaces() int32 {
	if x != nil {
		return x.DecimalPlaces
	}
	return 0
}

type Index struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Columns []*IndexColumn `protobuf:"bytes,2,rep,name=columns,proto3" json:"columns,omitempty"`
	Unique  bool           `protobuf:"varint,3,opt,name=unique,proto3" json:"unique,omitempty"`
}

func (x *Index) Reset() {
	*x = Index{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Index) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Index) ProtoMessage() {}

func (x *Index) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Index.ProtoReflect.Descriptor instead.
func (*Index) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{2}
}

func (x *Index) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Index) GetColumns() []*IndexColumn {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *Index) GetUnique() bool {
	if x != nil {
		return x.Unique
	}
	return false
}

type IndexColumn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Direction SortDirection `protobuf:"varint,2,opt,name=direction,proto3,enum=dolittle.integrations.m3.metadata.SortDirection" json:"direction,omitempty"`
}

func (x *IndexColumn) Reset() {
	*x = IndexColumn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexColumn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexColumn) ProtoMessage() {}

func (x *IndexColumn) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexColumn.ProtoReflect.Descriptor instead.
func (*IndexColumn) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{3}
}

func (x *IndexColumn) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IndexColumn) GetDirection() SortDirection {
	if x != nil {
		return x.Direction
	}
	return SortDirection_Ascending
}

type ForeignKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Table string                `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	Key   []*ForeignKeyRelation `protobuf:"bytes,2,rep,name=key,proto3" json:"key,omitempty"`
	// How many programs are using these tables together. Heuristic for how tightly coupled they are.
	Importance int32 `protobuf:"varint,3,opt,name=importance,proto3" json:"importance,omitempty"`
}

func (x *ForeignKey) Reset() {
	*x = ForeignKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForeignKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForeignKey) ProtoMessage() {}

func (x *ForeignKey) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForeignKey.ProtoReflect.Descriptor instead.
func (*ForeignKey) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{4}
}

func (x *ForeignKey) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *ForeignKey) GetKey() []*ForeignKeyRelation {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *ForeignKey) GetImportance() int32 {
	if x != nil {
		return x.Importance
	}
	return 0
}

type ForeignKeyRelation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Column           string `protobuf:"bytes,1,opt,name=column,proto3" json:"column,omitempty"`
	ReferencedColumn string `protobuf:"bytes,2,opt,name=referenced_column,json=referencedColumn,proto3" json:"referenced_column,omitempty"`
}

func (x *ForeignKeyRelation) Reset() {
	*x = ForeignKeyRelation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForeignKeyRelation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForeignKeyRelation) ProtoMessage() {}

func (x *ForeignKeyRelation) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForeignKeyRelation.ProtoReflect.Descriptor instead.
func (*ForeignKeyRelation) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{5}
}

func (x *ForeignKeyRelation) GetColumn() string {
	if x != nil {
		return x.Column
	}
	return ""
}

func (x *ForeignKeyRelation) GetReferencedColumn() string {
	if x != nil {
		return x.ReferencedColumn
	}
	return ""
}

type ProgramMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string                        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description    string                        `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Component      string                        `protobuf:"bytes,3,opt,name=component,proto3" json:"component,omitempty"`
	Category       string                        `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
	TablesUsed     []*ProgramMetadata_TableUsage `protobuf:"bytes,5,rep,name=tables_used,json=tablesUsed,proto3" json:"tables_used,omitempty"`
	Environment    string                        `protobuf:"bytes,10,opt,name=environment,proto3" json:"environment,omitempty"`
	DeploymentName string                        `protobuf:"bytes,11,opt,name=deployment_name,json=deploymentName,proto3" json:"deployment_name,omitempty"`
}

func (x *ProgramMetadata) Reset() {
	*x = ProgramMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProgramMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgramMetadata) ProtoMessage() {}

func (x *ProgramMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgramMetadata.ProtoReflect.Descriptor instead.
func (*ProgramMetadata) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{6}
}

func (x *ProgramMetadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProgramMetadata) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProgramMetadata) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *ProgramMetadata) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *ProgramMetadata) GetTablesUsed() []*ProgramMetadata_TableUsage {
	if x != nil {
		return x.TablesUsed
	}
	return nil
}

func (x *ProgramMetadata) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

func (x *ProgramMetadata) GetDeploymentName() string {
	if x != nil {
		return x.DeploymentName
	}
	return ""
}

type DeploymentStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MdpUrl         string                    `protobuf:"bytes,1,opt,name=mdp_url,json=mdpUrl,proto3" json:"mdp_url,omitempty"`
	QueuedRequests int32                     `protobuf:"varint,2,opt,name=queued_requests,json=queuedRequests,proto3" json:"queued_requests,omitempty"`
	Failure        *DeploymentStatus_Failure `protobuf:"bytes,3,opt,name=failure,proto3,oneof" json:"failure,omitempty"`
	DeploymentName string                    `protobuf:"bytes,11,opt,name=deployment_name,json=deploymentName,proto3" json:"deployment_name,omitempty"`
}

func (x *DeploymentStatus) Reset() {
	*x = DeploymentStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeploymentStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentStatus) ProtoMessage() {}

func (x *DeploymentStatus) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentStatus.ProtoReflect.Descriptor instead.
func (*DeploymentStatus) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{7}
}

func (x *DeploymentStatus) GetMdpUrl() string {
	if x != nil {
		return x.MdpUrl
	}
	return ""
}

func (x *DeploymentStatus) GetQueuedRequests() int32 {
	if x != nil {
		return x.QueuedRequests
	}
	return 0
}

func (x *DeploymentStatus) GetFailure() *DeploymentStatus_Failure {
	if x != nil {
		return x.Failure
	}
	return nil
}

func (x *DeploymentStatus) GetDeploymentName() string {
	if x != nil {
		return x.DeploymentName
	}
	return ""
}

type DeploymentMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MdpUrl                string   `protobuf:"bytes,1,opt,name=mdp_url,json=mdpUrl,proto3" json:"mdp_url,omitempty"`
	AvailableEnvironments []string `protobuf:"bytes,2,rep,name=available_environments,json=availableEnvironments,proto3" json:"available_environments,omitempty"`
	DeploymentName        string   `protobuf:"bytes,11,opt,name=deployment_name,json=deploymentName,proto3" json:"deployment_name,omitempty"`
}

func (x *DeploymentMetadata) Reset() {
	*x = DeploymentMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeploymentMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentMetadata) ProtoMessage() {}

func (x *DeploymentMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentMetadata.ProtoReflect.Descriptor instead.
func (*DeploymentMetadata) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{8}
}

func (x *DeploymentMetadata) GetMdpUrl() string {
	if x != nil {
		return x.MdpUrl
	}
	return ""
}

func (x *DeploymentMetadata) GetAvailableEnvironments() []string {
	if x != nil {
		return x.AvailableEnvironments
	}
	return nil
}

func (x *DeploymentMetadata) GetDeploymentName() string {
	if x != nil {
		return x.DeploymentName
	}
	return ""
}

type M3Environment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tables         []*M3Environment_Table   `protobuf:"bytes,1,rep,name=tables,proto3" json:"tables,omitempty"`
	Programs       []*M3Environment_Program `protobuf:"bytes,2,rep,name=programs,proto3" json:"programs,omitempty"`
	Environment    string                   `protobuf:"bytes,10,opt,name=environment,proto3" json:"environment,omitempty"`
	DeploymentName string                   `protobuf:"bytes,11,opt,name=deployment_name,json=deploymentName,proto3" json:"deployment_name,omitempty"`
}

func (x *M3Environment) Reset() {
	*x = M3Environment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *M3Environment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*M3Environment) ProtoMessage() {}

func (x *M3Environment) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use M3Environment.ProtoReflect.Descriptor instead.
func (*M3Environment) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{9}
}

func (x *M3Environment) GetTables() []*M3Environment_Table {
	if x != nil {
		return x.Tables
	}
	return nil
}

func (x *M3Environment) GetPrograms() []*M3Environment_Program {
	if x != nil {
		return x.Programs
	}
	return nil
}

func (x *M3Environment) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

func (x *M3Environment) GetDeploymentName() string {
	if x != nil {
		return x.DeploymentName
	}
	return ""
}

type M3EnvironmentColumnDiffs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Environment1          string   `protobuf:"bytes,1,opt,name=environment1,proto3" json:"environment1,omitempty"`
	Environment2          string   `protobuf:"bytes,2,opt,name=environment2,proto3" json:"environment2,omitempty"`
	TablesWithDifferences []string `protobuf:"bytes,3,rep,name=tables_with_differences,json=tablesWithDifferences,proto3" json:"tables_with_differences,omitempty"`
	DeploymentName        string   `protobuf:"bytes,11,opt,name=deployment_name,json=deploymentName,proto3" json:"deployment_name,omitempty"`
}

func (x *M3EnvironmentColumnDiffs) Reset() {
	*x = M3EnvironmentColumnDiffs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *M3EnvironmentColumnDiffs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*M3EnvironmentColumnDiffs) ProtoMessage() {}

func (x *M3EnvironmentColumnDiffs) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use M3EnvironmentColumnDiffs.ProtoReflect.Descriptor instead.
func (*M3EnvironmentColumnDiffs) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{10}
}

func (x *M3EnvironmentColumnDiffs) GetEnvironment1() string {
	if x != nil {
		return x.Environment1
	}
	return ""
}

func (x *M3EnvironmentColumnDiffs) GetEnvironment2() string {
	if x != nil {
		return x.Environment2
	}
	return ""
}

func (x *M3EnvironmentColumnDiffs) GetTablesWithDifferences() []string {
	if x != nil {
		return x.TablesWithDifferences
	}
	return nil
}

func (x *M3EnvironmentColumnDiffs) GetDeploymentName() string {
	if x != nil {
		return x.DeploymentName
	}
	return ""
}

type M3EnvironmentTableDiffs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReferenceEnvironment  string   `protobuf:"bytes,1,opt,name=reference_environment,json=referenceEnvironment,proto3" json:"reference_environment,omitempty"`
	ComparedEnvironment   string   `protobuf:"bytes,2,opt,name=compared_environment,json=comparedEnvironment,proto3" json:"compared_environment,omitempty"`
	TablesRemoved         []string `protobuf:"bytes,3,rep,name=tables_removed,json=tablesRemoved,proto3" json:"tables_removed,omitempty"`
	TablesWithDifferences []string `protobuf:"bytes,4,rep,name=tables_with_differences,json=tablesWithDifferences,proto3" json:"tables_with_differences,omitempty"`
	TablesAdded           []string `protobuf:"bytes,5,rep,name=tables_added,json=tablesAdded,proto3" json:"tables_added,omitempty"`
	DeploymentName        string   `protobuf:"bytes,11,opt,name=deployment_name,json=deploymentName,proto3" json:"deployment_name,omitempty"`
}

func (x *M3EnvironmentTableDiffs) Reset() {
	*x = M3EnvironmentTableDiffs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *M3EnvironmentTableDiffs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*M3EnvironmentTableDiffs) ProtoMessage() {}

func (x *M3EnvironmentTableDiffs) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use M3EnvironmentTableDiffs.ProtoReflect.Descriptor instead.
func (*M3EnvironmentTableDiffs) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{11}
}

func (x *M3EnvironmentTableDiffs) GetReferenceEnvironment() string {
	if x != nil {
		return x.ReferenceEnvironment
	}
	return ""
}

func (x *M3EnvironmentTableDiffs) GetComparedEnvironment() string {
	if x != nil {
		return x.ComparedEnvironment
	}
	return ""
}

func (x *M3EnvironmentTableDiffs) GetTablesRemoved() []string {
	if x != nil {
		return x.TablesRemoved
	}
	return nil
}

func (x *M3EnvironmentTableDiffs) GetTablesWithDifferences() []string {
	if x != nil {
		return x.TablesWithDifferences
	}
	return nil
}

func (x *M3EnvironmentTableDiffs) GetTablesAdded() []string {
	if x != nil {
		return x.TablesAdded
	}
	return nil
}

func (x *M3EnvironmentTableDiffs) GetDeploymentName() string {
	if x != nil {
		return x.DeploymentName
	}
	return ""
}

type MetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Higher priority requests are processed first
	Priority       int32  `protobuf:"varint,1,opt,name=priority,proto3" json:"priority,omitempty"`
	DeploymentName string `protobuf:"bytes,11,opt,name=deployment_name,json=deploymentName,proto3" json:"deployment_name,omitempty"`
	// Types that are assignable to Request:
	//	*MetadataRequest_DeploymentRequest
	//	*MetadataRequest_M3EnvironmentRequest
	//	*MetadataRequest_TablesMetadataRequest
	//	*MetadataRequest_M3EnvironmentDiffsRequest
	//	*MetadataRequest_ByDataType_
	//	*MetadataRequest_StatusRequest
	//	*MetadataRequest_M3EnvironmentColumnDiffsRequest
	Request isMetadataRequest_Request `protobuf_oneof:"request"`
}

func (x *MetadataRequest) Reset() {
	*x = MetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataRequest) ProtoMessage() {}

func (x *MetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataRequest.ProtoReflect.Descriptor instead.
func (*MetadataRequest) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{12}
}

func (x *MetadataRequest) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *MetadataRequest) GetDeploymentName() string {
	if x != nil {
		return x.DeploymentName
	}
	return ""
}

func (m *MetadataRequest) GetRequest() isMetadataRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *MetadataRequest) GetDeploymentRequest() *MetadataRequest_Deployment {
	if x, ok := x.GetRequest().(*MetadataRequest_DeploymentRequest); ok {
		return x.DeploymentRequest
	}
	return nil
}

func (x *MetadataRequest) GetM3EnvironmentRequest() *MetadataRequest_Environment {
	if x, ok := x.GetRequest().(*MetadataRequest_M3EnvironmentRequest); ok {
		return x.M3EnvironmentRequest
	}
	return nil
}

func (x *MetadataRequest) GetTablesMetadataRequest() *MetadataRequest_Tables {
	if x, ok := x.GetRequest().(*MetadataRequest_TablesMetadataRequest); ok {
		return x.TablesMetadataRequest
	}
	return nil
}

func (x *MetadataRequest) GetM3EnvironmentDiffsRequest() *MetadataRequest_EnvironmentTableDiffs {
	if x, ok := x.GetRequest().(*MetadataRequest_M3EnvironmentDiffsRequest); ok {
		return x.M3EnvironmentDiffsRequest
	}
	return nil
}

func (x *MetadataRequest) GetByDataType() *MetadataRequest_ByDataType {
	if x, ok := x.GetRequest().(*MetadataRequest_ByDataType_); ok {
		return x.ByDataType
	}
	return nil
}

func (x *MetadataRequest) GetStatusRequest() *MetadataRequest_Status {
	if x, ok := x.GetRequest().(*MetadataRequest_StatusRequest); ok {
		return x.StatusRequest
	}
	return nil
}

func (x *MetadataRequest) GetM3EnvironmentColumnDiffsRequest() *MetadataRequest_EnvironmentColumnDiffs {
	if x, ok := x.GetRequest().(*MetadataRequest_M3EnvironmentColumnDiffsRequest); ok {
		return x.M3EnvironmentColumnDiffsRequest
	}
	return nil
}

type isMetadataRequest_Request interface {
	isMetadataRequest_Request()
}

type MetadataRequest_DeploymentRequest struct {
	DeploymentRequest *MetadataRequest_Deployment `protobuf:"bytes,12,opt,name=deployment_request,json=deploymentRequest,proto3,oneof"`
}

type MetadataRequest_M3EnvironmentRequest struct {
	M3EnvironmentRequest *MetadataRequest_Environment `protobuf:"bytes,13,opt,name=m3_environment_request,json=m3EnvironmentRequest,proto3,oneof"`
}

type MetadataRequest_TablesMetadataRequest struct {
	TablesMetadataRequest *MetadataRequest_Tables `protobuf:"bytes,15,opt,name=tables_metadata_request,json=tablesMetadataRequest,proto3,oneof"`
}

type MetadataRequest_M3EnvironmentDiffsRequest struct {
	M3EnvironmentDiffsRequest *MetadataRequest_EnvironmentTableDiffs `protobuf:"bytes,16,opt,name=m3_environment_diffs_request,json=m3EnvironmentDiffsRequest,proto3,oneof"`
}

type MetadataRequest_ByDataType_ struct {
	ByDataType *MetadataRequest_ByDataType `protobuf:"bytes,17,opt,name=by_data_type,json=byDataType,proto3,oneof"`
}

type MetadataRequest_StatusRequest struct {
	StatusRequest *MetadataRequest_Status `protobuf:"bytes,18,opt,name=status_request,json=statusRequest,proto3,oneof"`
}

type MetadataRequest_M3EnvironmentColumnDiffsRequest struct {
	M3EnvironmentColumnDiffsRequest *MetadataRequest_EnvironmentColumnDiffs `protobuf:"bytes,19,opt,name=m3_environment_column_diffs_request,json=m3EnvironmentColumnDiffsRequest,proto3,oneof"`
}

func (*MetadataRequest_DeploymentRequest) isMetadataRequest_Request() {}

func (*MetadataRequest_M3EnvironmentRequest) isMetadataRequest_Request() {}

func (*MetadataRequest_TablesMetadataRequest) isMetadataRequest_Request() {}

func (*MetadataRequest_M3EnvironmentDiffsRequest) isMetadataRequest_Request() {}

func (*MetadataRequest_ByDataType_) isMetadataRequest_Request() {}

func (*MetadataRequest_StatusRequest) isMetadataRequest_Request() {}

func (*MetadataRequest_M3EnvironmentColumnDiffsRequest) isMetadataRequest_Request() {}

type ProgramMetadata_TableUsage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Table     string `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	UsageType string `protobuf:"bytes,2,opt,name=usage_type,json=usageType,proto3" json:"usage_type,omitempty"`
}

func (x *ProgramMetadata_TableUsage) Reset() {
	*x = ProgramMetadata_TableUsage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProgramMetadata_TableUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgramMetadata_TableUsage) ProtoMessage() {}

func (x *ProgramMetadata_TableUsage) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgramMetadata_TableUsage.ProtoReflect.Descriptor instead.
func (*ProgramMetadata_TableUsage) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{6, 0}
}

func (x *ProgramMetadata_TableUsage) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *ProgramMetadata_TableUsage) GetUsageType() string {
	if x != nil {
		return x.UsageType
	}
	return ""
}

type DeploymentStatus_Failure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HttpStatus int32  `protobuf:"varint,1,opt,name=http_status,json=httpStatus,proto3" json:"http_status,omitempty"`
	Error      string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *DeploymentStatus_Failure) Reset() {
	*x = DeploymentStatus_Failure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeploymentStatus_Failure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentStatus_Failure) ProtoMessage() {}

func (x *DeploymentStatus_Failure) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentStatus_Failure.ProtoReflect.Descriptor instead.
func (*DeploymentStatus_Failure) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{7, 0}
}

func (x *DeploymentStatus_Failure) GetHttpStatus() int32 {
	if x != nil {
		return x.HttpStatus
	}
	return 0
}

func (x *DeploymentStatus_Failure) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type M3Environment_Table struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Component   string `protobuf:"bytes,3,opt,name=component,proto3" json:"component,omitempty"`
}

func (x *M3Environment_Table) Reset() {
	*x = M3Environment_Table{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *M3Environment_Table) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*M3Environment_Table) ProtoMessage() {}

func (x *M3Environment_Table) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use M3Environment_Table.ProtoReflect.Descriptor instead.
func (*M3Environment_Table) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{9, 0}
}

func (x *M3Environment_Table) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *M3Environment_Table) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *M3Environment_Table) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

type M3Environment_Program struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Component   string `protobuf:"bytes,3,opt,name=component,proto3" json:"component,omitempty"`
}

func (x *M3Environment_Program) Reset() {
	*x = M3Environment_Program{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *M3Environment_Program) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*M3Environment_Program) ProtoMessage() {}

func (x *M3Environment_Program) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use M3Environment_Program.ProtoReflect.Descriptor instead.
func (*M3Environment_Program) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{9, 1}
}

func (x *M3Environment_Program) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *M3Environment_Program) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *M3Environment_Program) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

// List all environments in the deployment
type MetadataRequest_Deployment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MetadataRequest_Deployment) Reset() {
	*x = MetadataRequest_Deployment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataRequest_Deployment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataRequest_Deployment) ProtoMessage() {}

func (x *MetadataRequest_Deployment) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataRequest_Deployment.ProtoReflect.Descriptor instead.
func (*MetadataRequest_Deployment) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{12, 0}
}

type MetadataRequest_Tables struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	M3Environment      string   `protobuf:"bytes,1,opt,name=m3_environment,json=m3Environment,proto3" json:"m3_environment,omitempty"`
	Tables             []string `protobuf:"bytes,2,rep,name=tables,proto3" json:"tables,omitempty"`
	IncludeIndexes     bool     `protobuf:"varint,3,opt,name=include_indexes,json=includeIndexes,proto3" json:"include_indexes,omitempty"`
	IncludeForeignKeys bool     `protobuf:"varint,4,opt,name=include_foreign_keys,json=includeForeignKeys,proto3" json:"include_foreign_keys,omitempty"`
}

func (x *MetadataRequest_Tables) Reset() {
	*x = MetadataRequest_Tables{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataRequest_Tables) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataRequest_Tables) ProtoMessage() {}

func (x *MetadataRequest_Tables) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataRequest_Tables.ProtoReflect.Descriptor instead.
func (*MetadataRequest_Tables) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{12, 1}
}

func (x *MetadataRequest_Tables) GetM3Environment() string {
	if x != nil {
		return x.M3Environment
	}
	return ""
}

func (x *MetadataRequest_Tables) GetTables() []string {
	if x != nil {
		return x.Tables
	}
	return nil
}

func (x *MetadataRequest_Tables) GetIncludeIndexes() bool {
	if x != nil {
		return x.IncludeIndexes
	}
	return false
}

func (x *MetadataRequest_Tables) GetIncludeForeignKeys() bool {
	if x != nil {
		return x.IncludeForeignKeys
	}
	return false
}

type MetadataRequest_Programs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	M3Environment string   `protobuf:"bytes,1,opt,name=m3_environment,json=m3Environment,proto3" json:"m3_environment,omitempty"`
	Programs      []string `protobuf:"bytes,2,rep,name=programs,proto3" json:"programs,omitempty"`
}

func (x *MetadataRequest_Programs) Reset() {
	*x = MetadataRequest_Programs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataRequest_Programs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataRequest_Programs) ProtoMessage() {}

func (x *MetadataRequest_Programs) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataRequest_Programs.ProtoReflect.Descriptor instead.
func (*MetadataRequest_Programs) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{12, 2}
}

func (x *MetadataRequest_Programs) GetM3Environment() string {
	if x != nil {
		return x.M3Environment
	}
	return ""
}

func (x *MetadataRequest_Programs) GetPrograms() []string {
	if x != nil {
		return x.Programs
	}
	return nil
}

type MetadataRequest_Environment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	M3Environment string `protobuf:"bytes,1,opt,name=m3_environment,json=m3Environment,proto3" json:"m3_environment,omitempty"`
}

func (x *MetadataRequest_Environment) Reset() {
	*x = MetadataRequest_Environment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataRequest_Environment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataRequest_Environment) ProtoMessage() {}

func (x *MetadataRequest_Environment) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataRequest_Environment.ProtoReflect.Descriptor instead.
func (*MetadataRequest_Environment) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{12, 3}
}

func (x *MetadataRequest_Environment) GetM3Environment() string {
	if x != nil {
		return x.M3Environment
	}
	return ""
}

// List the changes in tables between two environments, including removed and added tables
type MetadataRequest_EnvironmentTableDiffs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReferenceM3Environment string `protobuf:"bytes,1,opt,name=reference_m3_environment,json=referenceM3Environment,proto3" json:"reference_m3_environment,omitempty"`
	ComparedM3Environment  string `protobuf:"bytes,2,opt,name=compared_m3_environment,json=comparedM3Environment,proto3" json:"compared_m3_environment,omitempty"`
}

func (x *MetadataRequest_EnvironmentTableDiffs) Reset() {
	*x = MetadataRequest_EnvironmentTableDiffs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataRequest_EnvironmentTableDiffs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataRequest_EnvironmentTableDiffs) ProtoMessage() {}

func (x *MetadataRequest_EnvironmentTableDiffs) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataRequest_EnvironmentTableDiffs.ProtoReflect.Descriptor instead.
func (*MetadataRequest_EnvironmentTableDiffs) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{12, 4}
}

func (x *MetadataRequest_EnvironmentTableDiffs) GetReferenceM3Environment() string {
	if x != nil {
		return x.ReferenceM3Environment
	}
	return ""
}

func (x *MetadataRequest_EnvironmentTableDiffs) GetComparedM3Environment() string {
	if x != nil {
		return x.ComparedM3Environment
	}
	return ""
}

// Lists the changed tables between two environments.
type MetadataRequest_EnvironmentColumnDiffs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReferenceM3Environment string `protobuf:"bytes,1,opt,name=reference_m3_environment,json=referenceM3Environment,proto3" json:"reference_m3_environment,omitempty"`
	ComparedM3Environment  string `protobuf:"bytes,2,opt,name=compared_m3_environment,json=comparedM3Environment,proto3" json:"compared_m3_environment,omitempty"`
}

func (x *MetadataRequest_EnvironmentColumnDiffs) Reset() {
	*x = MetadataRequest_EnvironmentColumnDiffs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataRequest_EnvironmentColumnDiffs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataRequest_EnvironmentColumnDiffs) ProtoMessage() {}

func (x *MetadataRequest_EnvironmentColumnDiffs) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataRequest_EnvironmentColumnDiffs.ProtoReflect.Descriptor instead.
func (*MetadataRequest_EnvironmentColumnDiffs) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{12, 5}
}

func (x *MetadataRequest_EnvironmentColumnDiffs) GetReferenceM3Environment() string {
	if x != nil {
		return x.ReferenceM3Environment
	}
	return ""
}

func (x *MetadataRequest_EnvironmentColumnDiffs) GetComparedM3Environment() string {
	if x != nil {
		return x.ComparedM3Environment
	}
	return ""
}

type MetadataRequest_Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MetadataRequest_Status) Reset() {
	*x = MetadataRequest_Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataRequest_Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataRequest_Status) ProtoMessage() {}

func (x *MetadataRequest_Status) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataRequest_Status.ProtoReflect.Descriptor instead.
func (*MetadataRequest_Status) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{12, 6}
}

type MetadataRequest_ByDataType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataType    string                            `protobuf:"bytes,1,opt,name=data_type,json=dataType,proto3" json:"data_type,omitempty"`
	Identifiers []*MetadataRequest_ByDataType_Tag `protobuf:"bytes,2,rep,name=identifiers,proto3" json:"identifiers,omitempty"`
}

func (x *MetadataRequest_ByDataType) Reset() {
	*x = MetadataRequest_ByDataType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataRequest_ByDataType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataRequest_ByDataType) ProtoMessage() {}

func (x *MetadataRequest_ByDataType) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataRequest_ByDataType.ProtoReflect.Descriptor instead.
func (*MetadataRequest_ByDataType) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{12, 7}
}

func (x *MetadataRequest_ByDataType) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *MetadataRequest_ByDataType) GetIdentifiers() []*MetadataRequest_ByDataType_Tag {
	if x != nil {
		return x.Identifiers
	}
	return nil
}

type MetadataRequest_ByDataType_Tag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *MetadataRequest_ByDataType_Tag) Reset() {
	*x = MetadataRequest_ByDataType_Tag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataRequest_ByDataType_Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataRequest_ByDataType_Tag) ProtoMessage() {}

func (x *MetadataRequest_ByDataType_Tag) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataRequest_ByDataType_Tag.ProtoReflect.Descriptor instead.
func (*MetadataRequest_ByDataType_Tag) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{12, 7, 0}
}

func (x *MetadataRequest_ByDataType_Tag) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *MetadataRequest_ByDataType_Tag) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_M3_Metadata_Metadata_proto protoreflect.FileDescriptor

var file_M3_Metadata_Metadata_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x4d, 0x33, 0x2f, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x21, 0x64, 0x6f,
	0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x33, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xf8, 0x03, 0x0a, 0x0d, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4b, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74,
	0x74, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x6d, 0x33, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x07, 0x63, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x73, 0x12, 0x49, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x64, 0x6f, 0x6c, 0x69,
	0x74, 0x74, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x6d, 0x33, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x12,
	0x42, 0x0a, 0x07, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x33, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x07, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x65, 0x73, 0x12, 0x50, 0x0a, 0x0c, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x5f, 0x6b,
	0x65, 0x79, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x64, 0x6f, 0x6c, 0x69,
	0x74, 0x74, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x6d, 0x33, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x46, 0x6f,
	0x72, 0x65, 0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x0b, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67,
	0x6e, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12,
	0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xb0, 0x01, 0x0a, 0x0e, 0x43,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x40, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2c, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x33, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61,
	0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x22, 0x7d, 0x0a,
	0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x48, 0x0a, 0x07, 0x63, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x64, 0x6f,
	0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x33, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x07, 0x63, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x22, 0x71, 0x0a, 0x0b,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x4e, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x30, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x33, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x8b, 0x01, 0x0a, 0x0a, 0x46, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x47, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x35, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x33, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x46, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1e, 0x0a,
	0x0a, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x59, 0x0a,
	0x12, 0x46, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x2b, 0x0a, 0x11, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x64, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x22, 0xef, 0x02, 0x0a, 0x0f, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x5e, 0x0a, 0x0b,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x3d, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x33, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x55, 0x73, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x27,
	0x0a, 0x0f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x41, 0x0a, 0x0a, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0xa7, 0x02, 0x0a, 0x10, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x17, 0x0a, 0x07, 0x6d, 0x64, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6d, 0x64, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x12, 0x5a, 0x0a, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x33, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x48,
	0x00, 0x52, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a,
	0x0f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x40, 0x0a, 0x07, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x68, 0x74, 0x74, 0x70, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x66, 0x61, 0x69,
	0x6c, 0x75, 0x72, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x12, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x6d,
	0x64, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x64,
	0x70, 0x55, 0x72, 0x6c, 0x12, 0x35, 0x0a, 0x16, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x15, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0xbc, 0x03, 0x0a, 0x0d, 0x4d, 0x33, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x4e, 0x0a, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c,
	0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d,
	0x33, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x33, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x06,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x54, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74,
	0x74, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x6d, 0x33, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x33, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x27,
	0x0a, 0x0f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x5b, 0x0a, 0x05, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x1a, 0x5d, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x22, 0xc3, 0x01, 0x0a, 0x18, 0x4d, 0x33, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x44, 0x69, 0x66, 0x66, 0x73,
	0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x31,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x31, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x32, 0x12, 0x36, 0x0a, 0x17, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x73, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x15, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x73, 0x57, 0x69, 0x74, 0x68, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73,
	0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xac, 0x02, 0x0a, 0x17, 0x4d, 0x33,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x44, 0x69, 0x66, 0x66, 0x73, 0x12, 0x33, 0x0a, 0x15, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x14, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72,
	0x65, 0x64, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a,
	0x0e, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x64, 0x12, 0x36, 0x0a, 0x17, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x5f, 0x77,
	0x69, 0x74, 0x68, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x15, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x57, 0x69, 0x74,
	0x68, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x5f, 0x61, 0x64, 0x64, 0x65, 0x64, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0b, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x41, 0x64, 0x64, 0x65, 0x64, 0x12,
	0x27, 0x0a, 0x0f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xca, 0x0d, 0x0a, 0x0f, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x6e, 0x0a, 0x12, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e,
	0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x33, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x11,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x76, 0x0a, 0x16, 0x6d, 0x33, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3e, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x33, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x48, 0x00, 0x52, 0x14, 0x6d, 0x33, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x73, 0x0a, 0x17, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x64, 0x6f, 0x6c,
	0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x6d, 0x33, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x48, 0x00, 0x52, 0x15, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x8b,
	0x01, 0x0a, 0x1c, 0x6d, 0x33, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x33,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x69, 0x66, 0x66, 0x73, 0x48,
	0x00, 0x52, 0x19, 0x6d, 0x33, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x44, 0x69, 0x66, 0x66, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x61, 0x0a, 0x0c,
	0x62, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x33, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x42, 0x79, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70,
	0x65, 0x48, 0x00, 0x52, 0x0a, 0x62, 0x79, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x62, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74,
	0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x6d, 0x33, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x99, 0x01, 0x0a, 0x23, 0x6d, 0x33, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x64, 0x69,
	0x66, 0x66, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x49, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x33, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x44, 0x69, 0x66, 0x66, 0x73, 0x48, 0x00, 0x52, 0x1f,
	0x6d, 0x33, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x44, 0x69, 0x66, 0x66, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x0c, 0x0a, 0x0a, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0xa2, 0x01,
	0x0a, 0x06, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x33, 0x5f, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6d, 0x33, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0e, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73,
	0x12, 0x30, 0x0a, 0x14, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x65,
	0x69, 0x67, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12,
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x46, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x4b, 0x65,
	0x79, 0x73, 0x1a, 0x4d, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x25,
	0x0a, 0x0e, 0x6d, 0x33, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x33, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x73, 0x1a, 0x34, 0x0a, 0x0b, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x33, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x33, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x89, 0x01, 0x0a, 0x15, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x69, 0x66, 0x66,
	0x73, 0x12, 0x38, 0x0a, 0x18, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6d,
	0x33, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x16, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4d, 0x33,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x17, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x6d, 0x33, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x72, 0x65, 0x64, 0x4d, 0x33, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x1a, 0x8a, 0x01, 0x0a, 0x16, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x44, 0x69, 0x66, 0x66, 0x73, 0x12, 0x38,
	0x0a, 0x18, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6d, 0x33, 0x5f, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x16, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4d, 0x33, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x72, 0x65, 0x64, 0x5f, 0x6d, 0x33, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x72, 0x65, 0x64, 0x4d, 0x33, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x1a, 0x08, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0xbd, 0x01, 0x0a, 0x0a, 0x42,
	0x79, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61,
	0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x63, 0x0a, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x64, 0x6f,
	0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x33, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x42, 0x79, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x0b,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x1a, 0x2d, 0x0a, 0x03, 0x54,
	0x61, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2a, 0x23, 0x0a, 0x09, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x10, 0x00, 0x12, 0x0a,
	0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x10, 0x01, 0x2a, 0x2e, 0x0a, 0x0d, 0x53, 0x6f,
	0x72, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0d, 0x0a, 0x09, 0x41,
	0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x65,
	0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x42, 0x64, 0x5a, 0x34, 0x67, 0x6f,
	0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x69, 0x6f, 0x2f, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x73, 0x2f, 0x76, 0x32, 0x2f, 0x6d, 0x33, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0xaa, 0x02, 0x2b, 0x44, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x49, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x73, 0x2e, 0x4d, 0x33, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_M3_Metadata_Metadata_proto_rawDescOnce sync.Once
	file_M3_Metadata_Metadata_proto_rawDescData = file_M3_Metadata_Metadata_proto_rawDesc
)

func file_M3_Metadata_Metadata_proto_rawDescGZIP() []byte {
	file_M3_Metadata_Metadata_proto_rawDescOnce.Do(func() {
		file_M3_Metadata_Metadata_proto_rawDescData = protoimpl.X.CompressGZIP(file_M3_Metadata_Metadata_proto_rawDescData)
	})
	return file_M3_Metadata_Metadata_proto_rawDescData
}

var file_M3_Metadata_Metadata_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_M3_Metadata_Metadata_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_M3_Metadata_Metadata_proto_goTypes = []interface{}{
	(FieldType)(0),                                 // 0: dolittle.integrations.m3.metadata.FieldType
	(SortDirection)(0),                             // 1: dolittle.integrations.m3.metadata.SortDirection
	(*TableMetadata)(nil),                          // 2: dolittle.integrations.m3.metadata.TableMetadata
	(*ColumnMetadata)(nil),                         // 3: dolittle.integrations.m3.metadata.ColumnMetadata
	(*Index)(nil),                                  // 4: dolittle.integrations.m3.metadata.Index
	(*IndexColumn)(nil),                            // 5: dolittle.integrations.m3.metadata.IndexColumn
	(*ForeignKey)(nil),                             // 6: dolittle.integrations.m3.metadata.ForeignKey
	(*ForeignKeyRelation)(nil),                     // 7: dolittle.integrations.m3.metadata.ForeignKeyRelation
	(*ProgramMetadata)(nil),                        // 8: dolittle.integrations.m3.metadata.ProgramMetadata
	(*DeploymentStatus)(nil),                       // 9: dolittle.integrations.m3.metadata.DeploymentStatus
	(*DeploymentMetadata)(nil),                     // 10: dolittle.integrations.m3.metadata.DeploymentMetadata
	(*M3Environment)(nil),                          // 11: dolittle.integrations.m3.metadata.M3Environment
	(*M3EnvironmentColumnDiffs)(nil),               // 12: dolittle.integrations.m3.metadata.M3EnvironmentColumnDiffs
	(*M3EnvironmentTableDiffs)(nil),                // 13: dolittle.integrations.m3.metadata.M3EnvironmentTableDiffs
	(*MetadataRequest)(nil),                        // 14: dolittle.integrations.m3.metadata.MetadataRequest
	(*ProgramMetadata_TableUsage)(nil),             // 15: dolittle.integrations.m3.metadata.ProgramMetadata.TableUsage
	(*DeploymentStatus_Failure)(nil),               // 16: dolittle.integrations.m3.metadata.DeploymentStatus.Failure
	(*M3Environment_Table)(nil),                    // 17: dolittle.integrations.m3.metadata.M3Environment.Table
	(*M3Environment_Program)(nil),                  // 18: dolittle.integrations.m3.metadata.M3Environment.Program
	(*MetadataRequest_Deployment)(nil),             // 19: dolittle.integrations.m3.metadata.MetadataRequest.Deployment
	(*MetadataRequest_Tables)(nil),                 // 20: dolittle.integrations.m3.metadata.MetadataRequest.Tables
	(*MetadataRequest_Programs)(nil),               // 21: dolittle.integrations.m3.metadata.MetadataRequest.Programs
	(*MetadataRequest_Environment)(nil),            // 22: dolittle.integrations.m3.metadata.MetadataRequest.Environment
	(*MetadataRequest_EnvironmentTableDiffs)(nil),  // 23: dolittle.integrations.m3.metadata.MetadataRequest.EnvironmentTableDiffs
	(*MetadataRequest_EnvironmentColumnDiffs)(nil), // 24: dolittle.integrations.m3.metadata.MetadataRequest.EnvironmentColumnDiffs
	(*MetadataRequest_Status)(nil),                 // 25: dolittle.integrations.m3.metadata.MetadataRequest.Status
	(*MetadataRequest_ByDataType)(nil),             // 26: dolittle.integrations.m3.metadata.MetadataRequest.ByDataType
	(*MetadataRequest_ByDataType_Tag)(nil),         // 27: dolittle.integrations.m3.metadata.MetadataRequest.ByDataType.Tag
}
var file_M3_Metadata_Metadata_proto_depIdxs = []int32{
	3,  // 0: dolittle.integrations.m3.metadata.TableMetadata.columns:type_name -> dolittle.integrations.m3.metadata.ColumnMetadata
	4,  // 1: dolittle.integrations.m3.metadata.TableMetadata.primary_key:type_name -> dolittle.integrations.m3.metadata.Index
	4,  // 2: dolittle.integrations.m3.metadata.TableMetadata.indexes:type_name -> dolittle.integrations.m3.metadata.Index
	6,  // 3: dolittle.integrations.m3.metadata.TableMetadata.foreign_keys:type_name -> dolittle.integrations.m3.metadata.ForeignKey
	0,  // 4: dolittle.integrations.m3.metadata.ColumnMetadata.type:type_name -> dolittle.integrations.m3.metadata.FieldType
	5,  // 5: dolittle.integrations.m3.metadata.Index.columns:type_name -> dolittle.integrations.m3.metadata.IndexColumn
	1,  // 6: dolittle.integrations.m3.metadata.IndexColumn.direction:type_name -> dolittle.integrations.m3.metadata.SortDirection
	7,  // 7: dolittle.integrations.m3.metadata.ForeignKey.key:type_name -> dolittle.integrations.m3.metadata.ForeignKeyRelation
	15, // 8: dolittle.integrations.m3.metadata.ProgramMetadata.tables_used:type_name -> dolittle.integrations.m3.metadata.ProgramMetadata.TableUsage
	16, // 9: dolittle.integrations.m3.metadata.DeploymentStatus.failure:type_name -> dolittle.integrations.m3.metadata.DeploymentStatus.Failure
	17, // 10: dolittle.integrations.m3.metadata.M3Environment.tables:type_name -> dolittle.integrations.m3.metadata.M3Environment.Table
	18, // 11: dolittle.integrations.m3.metadata.M3Environment.programs:type_name -> dolittle.integrations.m3.metadata.M3Environment.Program
	19, // 12: dolittle.integrations.m3.metadata.MetadataRequest.deployment_request:type_name -> dolittle.integrations.m3.metadata.MetadataRequest.Deployment
	22, // 13: dolittle.integrations.m3.metadata.MetadataRequest.m3_environment_request:type_name -> dolittle.integrations.m3.metadata.MetadataRequest.Environment
	20, // 14: dolittle.integrations.m3.metadata.MetadataRequest.tables_metadata_request:type_name -> dolittle.integrations.m3.metadata.MetadataRequest.Tables
	23, // 15: dolittle.integrations.m3.metadata.MetadataRequest.m3_environment_diffs_request:type_name -> dolittle.integrations.m3.metadata.MetadataRequest.EnvironmentTableDiffs
	26, // 16: dolittle.integrations.m3.metadata.MetadataRequest.by_data_type:type_name -> dolittle.integrations.m3.metadata.MetadataRequest.ByDataType
	25, // 17: dolittle.integrations.m3.metadata.MetadataRequest.status_request:type_name -> dolittle.integrations.m3.metadata.MetadataRequest.Status
	24, // 18: dolittle.integrations.m3.metadata.MetadataRequest.m3_environment_column_diffs_request:type_name -> dolittle.integrations.m3.metadata.MetadataRequest.EnvironmentColumnDiffs
	27, // 19: dolittle.integrations.m3.metadata.MetadataRequest.ByDataType.identifiers:type_name -> dolittle.integrations.m3.metadata.MetadataRequest.ByDataType.Tag
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_M3_Metadata_Metadata_proto_init() }
func file_M3_Metadata_Metadata_proto_init() {
	if File_M3_Metadata_Metadata_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_M3_Metadata_Metadata_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColumnMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Index); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexColumn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForeignKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForeignKeyRelation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProgramMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeploymentStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeploymentMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*M3Environment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*M3EnvironmentColumnDiffs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*M3EnvironmentTableDiffs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProgramMetadata_TableUsage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeploymentStatus_Failure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*M3Environment_Table); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*M3Environment_Program); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataRequest_Deployment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataRequest_Tables); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataRequest_Programs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataRequest_Environment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataRequest_EnvironmentTableDiffs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataRequest_EnvironmentColumnDiffs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataRequest_Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataRequest_ByDataType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataRequest_ByDataType_Tag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_M3_Metadata_Metadata_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_M3_Metadata_Metadata_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*MetadataRequest_DeploymentRequest)(nil),
		(*MetadataRequest_M3EnvironmentRequest)(nil),
		(*MetadataRequest_TablesMetadataRequest)(nil),
		(*MetadataRequest_M3EnvironmentDiffsRequest)(nil),
		(*MetadataRequest_ByDataType_)(nil),
		(*MetadataRequest_StatusRequest)(nil),
		(*MetadataRequest_M3EnvironmentColumnDiffsRequest)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_M3_Metadata_Metadata_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_M3_Metadata_Metadata_proto_goTypes,
		DependencyIndexes: file_M3_Metadata_Metadata_proto_depIdxs,
		EnumInfos:         file_M3_Metadata_Metadata_proto_enumTypes,
		MessageInfos:      file_M3_Metadata_Metadata_proto_msgTypes,
	}.Build()
	File_M3_Metadata_Metadata_proto = out.File
	file_M3_Metadata_Metadata_proto_rawDesc = nil
	file_M3_Metadata_Metadata_proto_goTypes = nil
	file_M3_Metadata_Metadata_proto_depIdxs = nil
}
