// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.18.1
// source: M3/Metadata/Metadata.proto

package metadata

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MetadataMessage_TableMetadata_ColumnMetadata_FieldType int32

const (
	MetadataMessage_TableMetadata_ColumnMetadata_string MetadataMessage_TableMetadata_ColumnMetadata_FieldType = 0
	MetadataMessage_TableMetadata_ColumnMetadata_number MetadataMessage_TableMetadata_ColumnMetadata_FieldType = 1
)

// Enum value maps for MetadataMessage_TableMetadata_ColumnMetadata_FieldType.
var (
	MetadataMessage_TableMetadata_ColumnMetadata_FieldType_name = map[int32]string{
		0: "string",
		1: "number",
	}
	MetadataMessage_TableMetadata_ColumnMetadata_FieldType_value = map[string]int32{
		"string": 0,
		"number": 1,
	}
)

func (x MetadataMessage_TableMetadata_ColumnMetadata_FieldType) Enum() *MetadataMessage_TableMetadata_ColumnMetadata_FieldType {
	p := new(MetadataMessage_TableMetadata_ColumnMetadata_FieldType)
	*p = x
	return p
}

func (x MetadataMessage_TableMetadata_ColumnMetadata_FieldType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MetadataMessage_TableMetadata_ColumnMetadata_FieldType) Descriptor() protoreflect.EnumDescriptor {
	return file_M3_Metadata_Metadata_proto_enumTypes[0].Descriptor()
}

func (MetadataMessage_TableMetadata_ColumnMetadata_FieldType) Type() protoreflect.EnumType {
	return &file_M3_Metadata_Metadata_proto_enumTypes[0]
}

func (x MetadataMessage_TableMetadata_ColumnMetadata_FieldType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MetadataMessage_TableMetadata_ColumnMetadata_FieldType.Descriptor instead.
func (MetadataMessage_TableMetadata_ColumnMetadata_FieldType) EnumDescriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{0, 0, 0, 0}
}

type MetadataMessage_TableMetadata_Index_IndexColumn_SortDirection int32

const (
	MetadataMessage_TableMetadata_Index_IndexColumn_Ascending  MetadataMessage_TableMetadata_Index_IndexColumn_SortDirection = 0
	MetadataMessage_TableMetadata_Index_IndexColumn_Descending MetadataMessage_TableMetadata_Index_IndexColumn_SortDirection = 1
)

// Enum value maps for MetadataMessage_TableMetadata_Index_IndexColumn_SortDirection.
var (
	MetadataMessage_TableMetadata_Index_IndexColumn_SortDirection_name = map[int32]string{
		0: "Ascending",
		1: "Descending",
	}
	MetadataMessage_TableMetadata_Index_IndexColumn_SortDirection_value = map[string]int32{
		"Ascending":  0,
		"Descending": 1,
	}
)

func (x MetadataMessage_TableMetadata_Index_IndexColumn_SortDirection) Enum() *MetadataMessage_TableMetadata_Index_IndexColumn_SortDirection {
	p := new(MetadataMessage_TableMetadata_Index_IndexColumn_SortDirection)
	*p = x
	return p
}

func (x MetadataMessage_TableMetadata_Index_IndexColumn_SortDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MetadataMessage_TableMetadata_Index_IndexColumn_SortDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_M3_Metadata_Metadata_proto_enumTypes[1].Descriptor()
}

func (MetadataMessage_TableMetadata_Index_IndexColumn_SortDirection) Type() protoreflect.EnumType {
	return &file_M3_Metadata_Metadata_proto_enumTypes[1]
}

func (x MetadataMessage_TableMetadata_Index_IndexColumn_SortDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MetadataMessage_TableMetadata_Index_IndexColumn_SortDirection.Descriptor instead.
func (MetadataMessage_TableMetadata_Index_IndexColumn_SortDirection) EnumDescriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{0, 0, 1, 0, 0}
}

type MetadataMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// If the data was requested with a specific id, it will be marked with the same id
	RequestId    *string `protobuf:"bytes,2,opt,name=request_id,json=requestId,proto3,oneof" json:"request_id,omitempty"`
	DeploymentId string  `protobuf:"bytes,11,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	// Types that are assignable to Data:
	//	*MetadataMessage_DeploymentMetadata_
	//	*MetadataMessage_M3Environment_
	//	*MetadataMessage_TableMetadata_
	//	*MetadataMessage_M3EnvironmentTableDiffs_
	//	*MetadataMessage_M3EnvironmentColumnDiffs_
	//	*MetadataMessage_DeploymentStatus_
	//	*MetadataMessage_ProgramMetadata_
	//	*MetadataMessage_DeploymentSystemMetadata_
	Data isMetadataMessage_Data `protobuf_oneof:"data"`
}

func (x *MetadataMessage) Reset() {
	*x = MetadataMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataMessage) ProtoMessage() {}

func (x *MetadataMessage) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataMessage.ProtoReflect.Descriptor instead.
func (*MetadataMessage) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{0}
}

func (x *MetadataMessage) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

func (x *MetadataMessage) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

func (m *MetadataMessage) GetData() isMetadataMessage_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *MetadataMessage) GetDeploymentMetadata() *MetadataMessage_DeploymentMetadata {
	if x, ok := x.GetData().(*MetadataMessage_DeploymentMetadata_); ok {
		return x.DeploymentMetadata
	}
	return nil
}

func (x *MetadataMessage) GetM3Environment() *MetadataMessage_M3Environment {
	if x, ok := x.GetData().(*MetadataMessage_M3Environment_); ok {
		return x.M3Environment
	}
	return nil
}

func (x *MetadataMessage) GetTableMetadata() *MetadataMessage_TableMetadata {
	if x, ok := x.GetData().(*MetadataMessage_TableMetadata_); ok {
		return x.TableMetadata
	}
	return nil
}

func (x *MetadataMessage) GetM3EnvironmentTableDiffs() *MetadataMessage_M3EnvironmentTableDiffs {
	if x, ok := x.GetData().(*MetadataMessage_M3EnvironmentTableDiffs_); ok {
		return x.M3EnvironmentTableDiffs
	}
	return nil
}

func (x *MetadataMessage) GetM3EnvironmentColumnDiffs() *MetadataMessage_M3EnvironmentColumnDiffs {
	if x, ok := x.GetData().(*MetadataMessage_M3EnvironmentColumnDiffs_); ok {
		return x.M3EnvironmentColumnDiffs
	}
	return nil
}

func (x *MetadataMessage) GetDeploymentStatus() *MetadataMessage_DeploymentStatus {
	if x, ok := x.GetData().(*MetadataMessage_DeploymentStatus_); ok {
		return x.DeploymentStatus
	}
	return nil
}

func (x *MetadataMessage) GetProgramMetadata() *MetadataMessage_ProgramMetadata {
	if x, ok := x.GetData().(*MetadataMessage_ProgramMetadata_); ok {
		return x.ProgramMetadata
	}
	return nil
}

func (x *MetadataMessage) GetDeploymentSystemMetadata() *MetadataMessage_DeploymentSystemMetadata {
	if x, ok := x.GetData().(*MetadataMessage_DeploymentSystemMetadata_); ok {
		return x.DeploymentSystemMetadata
	}
	return nil
}

type isMetadataMessage_Data interface {
	isMetadataMessage_Data()
}

type MetadataMessage_DeploymentMetadata_ struct {
	DeploymentMetadata *MetadataMessage_DeploymentMetadata `protobuf:"bytes,12,opt,name=deployment_metadata,json=deploymentMetadata,proto3,oneof"`
}

type MetadataMessage_M3Environment_ struct {
	M3Environment *MetadataMessage_M3Environment `protobuf:"bytes,13,opt,name=m3_environment,json=m3Environment,proto3,oneof"`
}

type MetadataMessage_TableMetadata_ struct {
	TableMetadata *MetadataMessage_TableMetadata `protobuf:"bytes,14,opt,name=table_metadata,json=tableMetadata,proto3,oneof"`
}

type MetadataMessage_M3EnvironmentTableDiffs_ struct {
	M3EnvironmentTableDiffs *MetadataMessage_M3EnvironmentTableDiffs `protobuf:"bytes,16,opt,name=m3_environment_table_diffs,json=m3EnvironmentTableDiffs,proto3,oneof"`
}

type MetadataMessage_M3EnvironmentColumnDiffs_ struct {
	M3EnvironmentColumnDiffs *MetadataMessage_M3EnvironmentColumnDiffs `protobuf:"bytes,17,opt,name=m3_environment_column_diffs,json=m3EnvironmentColumnDiffs,proto3,oneof"`
}

type MetadataMessage_DeploymentStatus_ struct {
	DeploymentStatus *MetadataMessage_DeploymentStatus `protobuf:"bytes,19,opt,name=deployment_status,json=deploymentStatus,proto3,oneof"`
}

type MetadataMessage_ProgramMetadata_ struct {
	ProgramMetadata *MetadataMessage_ProgramMetadata `protobuf:"bytes,20,opt,name=program_metadata,json=programMetadata,proto3,oneof"`
}

type MetadataMessage_DeploymentSystemMetadata_ struct {
	DeploymentSystemMetadata *MetadataMessage_DeploymentSystemMetadata `protobuf:"bytes,21,opt,name=deployment_system_metadata,json=deploymentSystemMetadata,proto3,oneof"`
}

func (*MetadataMessage_DeploymentMetadata_) isMetadataMessage_Data() {}

func (*MetadataMessage_M3Environment_) isMetadataMessage_Data() {}

func (*MetadataMessage_TableMetadata_) isMetadataMessage_Data() {}

func (*MetadataMessage_M3EnvironmentTableDiffs_) isMetadataMessage_Data() {}

func (*MetadataMessage_M3EnvironmentColumnDiffs_) isMetadataMessage_Data() {}

func (*MetadataMessage_DeploymentStatus_) isMetadataMessage_Data() {}

func (*MetadataMessage_ProgramMetadata_) isMetadataMessage_Data() {}

func (*MetadataMessage_DeploymentSystemMetadata_) isMetadataMessage_Data() {}

type MetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Higher priority requests are processed first
	Priority int32 `protobuf:"varint,1,opt,name=priority,proto3" json:"priority,omitempty"`
	// Identifier for the request
	// Can be used to correlate requests and responses, and to cancel specific requests
	RequestId string `protobuf:"bytes,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// Which deployment this request is for
	// Deployments on reading the request which does not match the deployment name should ignore it
	DeploymentId string `protobuf:"bytes,11,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	// Types that are assignable to Request:
	//	*MetadataRequest_DeploymentRequest
	//	*MetadataRequest_M3EnvironmentRequest
	//	*MetadataRequest_TablesMetadataRequest
	//	*MetadataRequest_M3EnvironmentDiffsRequest
	//	*MetadataRequest_ByDataType_
	//	*MetadataRequest_StatusRequest
	//	*MetadataRequest_M3EnvironmentColumnDiffsRequest
	//	*MetadataRequest_ProgramsMetadataRequest
	//	*MetadataRequest_ProgramMetadataRequest
	//	*MetadataRequest_TableMetadataRequest
	//	*MetadataRequest_DeploymentSystemsRequest
	//	*MetadataRequest_CancelRequest
	//	*MetadataRequest_CancelAllRequest
	Request isMetadataRequest_Request `protobuf_oneof:"request"`
}

func (x *MetadataRequest) Reset() {
	*x = MetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataRequest) ProtoMessage() {}

func (x *MetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataRequest.ProtoReflect.Descriptor instead.
func (*MetadataRequest) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{1}
}

func (x *MetadataRequest) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *MetadataRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *MetadataRequest) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

func (m *MetadataRequest) GetRequest() isMetadataRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *MetadataRequest) GetDeploymentRequest() *MetadataRequest_Deployment {
	if x, ok := x.GetRequest().(*MetadataRequest_DeploymentRequest); ok {
		return x.DeploymentRequest
	}
	return nil
}

func (x *MetadataRequest) GetM3EnvironmentRequest() *MetadataRequest_Environment {
	if x, ok := x.GetRequest().(*MetadataRequest_M3EnvironmentRequest); ok {
		return x.M3EnvironmentRequest
	}
	return nil
}

func (x *MetadataRequest) GetTablesMetadataRequest() *MetadataRequest_Tables {
	if x, ok := x.GetRequest().(*MetadataRequest_TablesMetadataRequest); ok {
		return x.TablesMetadataRequest
	}
	return nil
}

func (x *MetadataRequest) GetM3EnvironmentDiffsRequest() *MetadataRequest_EnvironmentTableDiffs {
	if x, ok := x.GetRequest().(*MetadataRequest_M3EnvironmentDiffsRequest); ok {
		return x.M3EnvironmentDiffsRequest
	}
	return nil
}

func (x *MetadataRequest) GetByDataType() *MetadataRequest_ByDataType {
	if x, ok := x.GetRequest().(*MetadataRequest_ByDataType_); ok {
		return x.ByDataType
	}
	return nil
}

func (x *MetadataRequest) GetStatusRequest() *MetadataRequest_Status {
	if x, ok := x.GetRequest().(*MetadataRequest_StatusRequest); ok {
		return x.StatusRequest
	}
	return nil
}

func (x *MetadataRequest) GetM3EnvironmentColumnDiffsRequest() *MetadataRequest_EnvironmentColumnDiffs {
	if x, ok := x.GetRequest().(*MetadataRequest_M3EnvironmentColumnDiffsRequest); ok {
		return x.M3EnvironmentColumnDiffsRequest
	}
	return nil
}

func (x *MetadataRequest) GetProgramsMetadataRequest() *MetadataRequest_Programs {
	if x, ok := x.GetRequest().(*MetadataRequest_ProgramsMetadataRequest); ok {
		return x.ProgramsMetadataRequest
	}
	return nil
}

func (x *MetadataRequest) GetProgramMetadataRequest() *MetadataRequest_Program {
	if x, ok := x.GetRequest().(*MetadataRequest_ProgramMetadataRequest); ok {
		return x.ProgramMetadataRequest
	}
	return nil
}

func (x *MetadataRequest) GetTableMetadataRequest() *MetadataRequest_Table {
	if x, ok := x.GetRequest().(*MetadataRequest_TableMetadataRequest); ok {
		return x.TableMetadataRequest
	}
	return nil
}

func (x *MetadataRequest) GetDeploymentSystemsRequest() *MetadataRequest_DeploymentSystems {
	if x, ok := x.GetRequest().(*MetadataRequest_DeploymentSystemsRequest); ok {
		return x.DeploymentSystemsRequest
	}
	return nil
}

func (x *MetadataRequest) GetCancelRequest() *MetadataRequest_Cancel {
	if x, ok := x.GetRequest().(*MetadataRequest_CancelRequest); ok {
		return x.CancelRequest
	}
	return nil
}

func (x *MetadataRequest) GetCancelAllRequest() *MetadataRequest_CancelAll {
	if x, ok := x.GetRequest().(*MetadataRequest_CancelAllRequest); ok {
		return x.CancelAllRequest
	}
	return nil
}

type isMetadataRequest_Request interface {
	isMetadataRequest_Request()
}

type MetadataRequest_DeploymentRequest struct {
	DeploymentRequest *MetadataRequest_Deployment `protobuf:"bytes,12,opt,name=deployment_request,json=deploymentRequest,proto3,oneof"`
}

type MetadataRequest_M3EnvironmentRequest struct {
	M3EnvironmentRequest *MetadataRequest_Environment `protobuf:"bytes,13,opt,name=m3_environment_request,json=m3EnvironmentRequest,proto3,oneof"`
}

type MetadataRequest_TablesMetadataRequest struct {
	TablesMetadataRequest *MetadataRequest_Tables `protobuf:"bytes,15,opt,name=tables_metadata_request,json=tablesMetadataRequest,proto3,oneof"`
}

type MetadataRequest_M3EnvironmentDiffsRequest struct {
	M3EnvironmentDiffsRequest *MetadataRequest_EnvironmentTableDiffs `protobuf:"bytes,16,opt,name=m3_environment_diffs_request,json=m3EnvironmentDiffsRequest,proto3,oneof"`
}

type MetadataRequest_ByDataType_ struct {
	ByDataType *MetadataRequest_ByDataType `protobuf:"bytes,17,opt,name=by_data_type,json=byDataType,proto3,oneof"`
}

type MetadataRequest_StatusRequest struct {
	StatusRequest *MetadataRequest_Status `protobuf:"bytes,18,opt,name=status_request,json=statusRequest,proto3,oneof"`
}

type MetadataRequest_M3EnvironmentColumnDiffsRequest struct {
	M3EnvironmentColumnDiffsRequest *MetadataRequest_EnvironmentColumnDiffs `protobuf:"bytes,19,opt,name=m3_environment_column_diffs_request,json=m3EnvironmentColumnDiffsRequest,proto3,oneof"`
}

type MetadataRequest_ProgramsMetadataRequest struct {
	ProgramsMetadataRequest *MetadataRequest_Programs `protobuf:"bytes,20,opt,name=programs_metadata_request,json=programsMetadataRequest,proto3,oneof"`
}

type MetadataRequest_ProgramMetadataRequest struct {
	ProgramMetadataRequest *MetadataRequest_Program `protobuf:"bytes,21,opt,name=program_metadata_request,json=programMetadataRequest,proto3,oneof"`
}

type MetadataRequest_TableMetadataRequest struct {
	TableMetadataRequest *MetadataRequest_Table `protobuf:"bytes,22,opt,name=table_metadata_request,json=tableMetadataRequest,proto3,oneof"`
}

type MetadataRequest_DeploymentSystemsRequest struct {
	DeploymentSystemsRequest *MetadataRequest_DeploymentSystems `protobuf:"bytes,23,opt,name=deployment_systems_request,json=deploymentSystemsRequest,proto3,oneof"`
}

type MetadataRequest_CancelRequest struct {
	CancelRequest *MetadataRequest_Cancel `protobuf:"bytes,400,opt,name=cancel_request,json=cancelRequest,proto3,oneof"`
}

type MetadataRequest_CancelAllRequest struct {
	CancelAllRequest *MetadataRequest_CancelAll `protobuf:"bytes,403,opt,name=cancel_all_request,json=cancelAllRequest,proto3,oneof"`
}

func (*MetadataRequest_DeploymentRequest) isMetadataRequest_Request() {}

func (*MetadataRequest_M3EnvironmentRequest) isMetadataRequest_Request() {}

func (*MetadataRequest_TablesMetadataRequest) isMetadataRequest_Request() {}

func (*MetadataRequest_M3EnvironmentDiffsRequest) isMetadataRequest_Request() {}

func (*MetadataRequest_ByDataType_) isMetadataRequest_Request() {}

func (*MetadataRequest_StatusRequest) isMetadataRequest_Request() {}

func (*MetadataRequest_M3EnvironmentColumnDiffsRequest) isMetadataRequest_Request() {}

func (*MetadataRequest_ProgramsMetadataRequest) isMetadataRequest_Request() {}

func (*MetadataRequest_ProgramMetadataRequest) isMetadataRequest_Request() {}

func (*MetadataRequest_TableMetadataRequest) isMetadataRequest_Request() {}

func (*MetadataRequest_DeploymentSystemsRequest) isMetadataRequest_Request() {}

func (*MetadataRequest_CancelRequest) isMetadataRequest_Request() {}

func (*MetadataRequest_CancelAllRequest) isMetadataRequest_Request() {}

type MetadataMessage_TableMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string                                          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string                                          `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Columns     []*MetadataMessage_TableMetadata_ColumnMetadata `protobuf:"bytes,3,rep,name=columns,proto3" json:"columns,omitempty"`
	PrimaryKey  *MetadataMessage_TableMetadata_Index            `protobuf:"bytes,4,opt,name=primary_key,json=primaryKey,proto3" json:"primary_key,omitempty"`
	Indexes     []*MetadataMessage_TableMetadata_Index          `protobuf:"bytes,5,rep,name=indexes,proto3" json:"indexes,omitempty"`
	ForeignKeys []*MetadataMessage_TableMetadata_ForeignKey     `protobuf:"bytes,6,rep,name=foreign_keys,json=foreignKeys,proto3" json:"foreign_keys,omitempty"`
	Component   string                                          `protobuf:"bytes,7,opt,name=component,proto3" json:"component,omitempty"`
	Category    string                                          `protobuf:"bytes,8,opt,name=category,proto3" json:"category,omitempty"`
	Environment string                                          `protobuf:"bytes,10,opt,name=environment,proto3" json:"environment,omitempty"`
}

func (x *MetadataMessage_TableMetadata) Reset() {
	*x = MetadataMessage_TableMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataMessage_TableMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataMessage_TableMetadata) ProtoMessage() {}

func (x *MetadataMessage_TableMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataMessage_TableMetadata.ProtoReflect.Descriptor instead.
func (*MetadataMessage_TableMetadata) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{0, 0}
}

func (x *MetadataMessage_TableMetadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MetadataMessage_TableMetadata) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MetadataMessage_TableMetadata) GetColumns() []*MetadataMessage_TableMetadata_ColumnMetadata {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *MetadataMessage_TableMetadata) GetPrimaryKey() *MetadataMessage_TableMetadata_Index {
	if x != nil {
		return x.PrimaryKey
	}
	return nil
}

func (x *MetadataMessage_TableMetadata) GetIndexes() []*MetadataMessage_TableMetadata_Index {
	if x != nil {
		return x.Indexes
	}
	return nil
}

func (x *MetadataMessage_TableMetadata) GetForeignKeys() []*MetadataMessage_TableMetadata_ForeignKey {
	if x != nil {
		return x.ForeignKeys
	}
	return nil
}

func (x *MetadataMessage_TableMetadata) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *MetadataMessage_TableMetadata) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *MetadataMessage_TableMetadata) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

type MetadataMessage_ProgramMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string                                        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description  string                                        `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Component    string                                        `protobuf:"bytes,3,opt,name=component,proto3" json:"component,omitempty"`
	Category     string                                        `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
	TablesUsed   []*MetadataMessage_ProgramMetadata_TableUsage `protobuf:"bytes,5,rep,name=tables_used,json=tablesUsed,proto3" json:"tables_used,omitempty"`
	ProgramsUsed []string                                      `protobuf:"bytes,6,rep,name=programs_used,json=programsUsed,proto3" json:"programs_used,omitempty"`
	Environment  string                                        `protobuf:"bytes,10,opt,name=environment,proto3" json:"environment,omitempty"`
}

func (x *MetadataMessage_ProgramMetadata) Reset() {
	*x = MetadataMessage_ProgramMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataMessage_ProgramMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataMessage_ProgramMetadata) ProtoMessage() {}

func (x *MetadataMessage_ProgramMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataMessage_ProgramMetadata.ProtoReflect.Descriptor instead.
func (*MetadataMessage_ProgramMetadata) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{0, 1}
}

func (x *MetadataMessage_ProgramMetadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MetadataMessage_ProgramMetadata) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MetadataMessage_ProgramMetadata) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *MetadataMessage_ProgramMetadata) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *MetadataMessage_ProgramMetadata) GetTablesUsed() []*MetadataMessage_ProgramMetadata_TableUsage {
	if x != nil {
		return x.TablesUsed
	}
	return nil
}

func (x *MetadataMessage_ProgramMetadata) GetProgramsUsed() []string {
	if x != nil {
		return x.ProgramsUsed
	}
	return nil
}

func (x *MetadataMessage_ProgramMetadata) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

type MetadataMessage_DeploymentStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MdpUrl         string                                    `protobuf:"bytes,1,opt,name=mdp_url,json=mdpUrl,proto3" json:"mdp_url,omitempty"`
	QueuedRequests int32                                     `protobuf:"varint,2,opt,name=queued_requests,json=queuedRequests,proto3" json:"queued_requests,omitempty"`
	Failure        *MetadataMessage_DeploymentStatus_Failure `protobuf:"bytes,3,opt,name=failure,proto3,oneof" json:"failure,omitempty"`
	Timestamp      *timestamppb.Timestamp                    `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *MetadataMessage_DeploymentStatus) Reset() {
	*x = MetadataMessage_DeploymentStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataMessage_DeploymentStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataMessage_DeploymentStatus) ProtoMessage() {}

func (x *MetadataMessage_DeploymentStatus) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataMessage_DeploymentStatus.ProtoReflect.Descriptor instead.
func (*MetadataMessage_DeploymentStatus) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{0, 2}
}

func (x *MetadataMessage_DeploymentStatus) GetMdpUrl() string {
	if x != nil {
		return x.MdpUrl
	}
	return ""
}

func (x *MetadataMessage_DeploymentStatus) GetQueuedRequests() int32 {
	if x != nil {
		return x.QueuedRequests
	}
	return 0
}

func (x *MetadataMessage_DeploymentStatus) GetFailure() *MetadataMessage_DeploymentStatus_Failure {
	if x != nil {
		return x.Failure
	}
	return nil
}

func (x *MetadataMessage_DeploymentStatus) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type MetadataMessage_DeploymentMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MdpUrl                string   `protobuf:"bytes,1,opt,name=mdp_url,json=mdpUrl,proto3" json:"mdp_url,omitempty"`
	AvailableEnvironments []string `protobuf:"bytes,2,rep,name=available_environments,json=availableEnvironments,proto3" json:"available_environments,omitempty"`
}

func (x *MetadataMessage_DeploymentMetadata) Reset() {
	*x = MetadataMessage_DeploymentMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataMessage_DeploymentMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataMessage_DeploymentMetadata) ProtoMessage() {}

func (x *MetadataMessage_DeploymentMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataMessage_DeploymentMetadata.ProtoReflect.Descriptor instead.
func (*MetadataMessage_DeploymentMetadata) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{0, 3}
}

func (x *MetadataMessage_DeploymentMetadata) GetMdpUrl() string {
	if x != nil {
		return x.MdpUrl
	}
	return ""
}

func (x *MetadataMessage_DeploymentMetadata) GetAvailableEnvironments() []string {
	if x != nil {
		return x.AvailableEnvironments
	}
	return nil
}

type MetadataMessage_DeploymentSystemMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MdpUrl  string                               `protobuf:"bytes,1,opt,name=mdp_url,json=mdpUrl,proto3" json:"mdp_url,omitempty"`
	Systems []*MetadataMessage_SystemInformation `protobuf:"bytes,2,rep,name=systems,proto3" json:"systems,omitempty"`
}

func (x *MetadataMessage_DeploymentSystemMetadata) Reset() {
	*x = MetadataMessage_DeploymentSystemMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataMessage_DeploymentSystemMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataMessage_DeploymentSystemMetadata) ProtoMessage() {}

func (x *MetadataMessage_DeploymentSystemMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataMessage_DeploymentSystemMetadata.ProtoReflect.Descriptor instead.
func (*MetadataMessage_DeploymentSystemMetadata) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{0, 4}
}

func (x *MetadataMessage_DeploymentSystemMetadata) GetMdpUrl() string {
	if x != nil {
		return x.MdpUrl
	}
	return ""
}

func (x *MetadataMessage_DeploymentSystemMetadata) GetSystems() []*MetadataMessage_SystemInformation {
	if x != nil {
		return x.Systems
	}
	return nil
}

type MetadataMessage_SystemInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BeSystemName  string `protobuf:"bytes,1,opt,name=be_system_name,json=beSystemName,proto3" json:"be_system_name,omitempty"`
	BeSystemType  string `protobuf:"bytes,2,opt,name=be_system_type,json=beSystemType,proto3" json:"be_system_type,omitempty"`
	BeSystemId    string `protobuf:"bytes,3,opt,name=be_system_id,json=beSystemId,proto3" json:"be_system_id,omitempty"`
	Version       string `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	Environment   string `protobuf:"bytes,5,opt,name=environment,proto3" json:"environment,omitempty"`
	Configuration string `protobuf:"bytes,6,opt,name=configuration,proto3" json:"configuration,omitempty"`
	Components    string `protobuf:"bytes,7,opt,name=components,proto3" json:"components,omitempty"`
	LastUpdate    string `protobuf:"bytes,8,opt,name=last_update,json=lastUpdate,proto3" json:"last_update,omitempty"`
	Status        string `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *MetadataMessage_SystemInformation) Reset() {
	*x = MetadataMessage_SystemInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataMessage_SystemInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataMessage_SystemInformation) ProtoMessage() {}

func (x *MetadataMessage_SystemInformation) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataMessage_SystemInformation.ProtoReflect.Descriptor instead.
func (*MetadataMessage_SystemInformation) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{0, 5}
}

func (x *MetadataMessage_SystemInformation) GetBeSystemName() string {
	if x != nil {
		return x.BeSystemName
	}
	return ""
}

func (x *MetadataMessage_SystemInformation) GetBeSystemType() string {
	if x != nil {
		return x.BeSystemType
	}
	return ""
}

func (x *MetadataMessage_SystemInformation) GetBeSystemId() string {
	if x != nil {
		return x.BeSystemId
	}
	return ""
}

func (x *MetadataMessage_SystemInformation) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *MetadataMessage_SystemInformation) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

func (x *MetadataMessage_SystemInformation) GetConfiguration() string {
	if x != nil {
		return x.Configuration
	}
	return ""
}

func (x *MetadataMessage_SystemInformation) GetComponents() string {
	if x != nil {
		return x.Components
	}
	return ""
}

func (x *MetadataMessage_SystemInformation) GetLastUpdate() string {
	if x != nil {
		return x.LastUpdate
	}
	return ""
}

func (x *MetadataMessage_SystemInformation) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type MetadataMessage_M3Environment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tables            []*MetadataMessage_M3Environment_Table   `protobuf:"bytes,1,rep,name=tables,proto3" json:"tables,omitempty"`
	Programs          []*MetadataMessage_M3Environment_Program `protobuf:"bytes,2,rep,name=programs,proto3" json:"programs,omitempty"`
	Environment       string                                   `protobuf:"bytes,10,opt,name=environment,proto3" json:"environment,omitempty"`
	SystemInformation *MetadataMessage_SystemInformation       `protobuf:"bytes,11,opt,name=system_information,json=systemInformation,proto3" json:"system_information,omitempty"`
}

func (x *MetadataMessage_M3Environment) Reset() {
	*x = MetadataMessage_M3Environment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataMessage_M3Environment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataMessage_M3Environment) ProtoMessage() {}

func (x *MetadataMessage_M3Environment) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataMessage_M3Environment.ProtoReflect.Descriptor instead.
func (*MetadataMessage_M3Environment) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{0, 6}
}

func (x *MetadataMessage_M3Environment) GetTables() []*MetadataMessage_M3Environment_Table {
	if x != nil {
		return x.Tables
	}
	return nil
}

func (x *MetadataMessage_M3Environment) GetPrograms() []*MetadataMessage_M3Environment_Program {
	if x != nil {
		return x.Programs
	}
	return nil
}

func (x *MetadataMessage_M3Environment) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

func (x *MetadataMessage_M3Environment) GetSystemInformation() *MetadataMessage_SystemInformation {
	if x != nil {
		return x.SystemInformation
	}
	return nil
}

type MetadataMessage_M3EnvironmentColumnDiffs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Environment1          string   `protobuf:"bytes,1,opt,name=environment1,proto3" json:"environment1,omitempty"`
	Environment2          string   `protobuf:"bytes,2,opt,name=environment2,proto3" json:"environment2,omitempty"`
	TablesWithDifferences []string `protobuf:"bytes,3,rep,name=tables_with_differences,json=tablesWithDifferences,proto3" json:"tables_with_differences,omitempty"`
}

func (x *MetadataMessage_M3EnvironmentColumnDiffs) Reset() {
	*x = MetadataMessage_M3EnvironmentColumnDiffs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataMessage_M3EnvironmentColumnDiffs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataMessage_M3EnvironmentColumnDiffs) ProtoMessage() {}

func (x *MetadataMessage_M3EnvironmentColumnDiffs) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataMessage_M3EnvironmentColumnDiffs.ProtoReflect.Descriptor instead.
func (*MetadataMessage_M3EnvironmentColumnDiffs) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{0, 7}
}

func (x *MetadataMessage_M3EnvironmentColumnDiffs) GetEnvironment1() string {
	if x != nil {
		return x.Environment1
	}
	return ""
}

func (x *MetadataMessage_M3EnvironmentColumnDiffs) GetEnvironment2() string {
	if x != nil {
		return x.Environment2
	}
	return ""
}

func (x *MetadataMessage_M3EnvironmentColumnDiffs) GetTablesWithDifferences() []string {
	if x != nil {
		return x.TablesWithDifferences
	}
	return nil
}

type MetadataMessage_M3EnvironmentTableDiffs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReferenceEnvironment  string   `protobuf:"bytes,1,opt,name=reference_environment,json=referenceEnvironment,proto3" json:"reference_environment,omitempty"`
	ComparedEnvironment   string   `protobuf:"bytes,2,opt,name=compared_environment,json=comparedEnvironment,proto3" json:"compared_environment,omitempty"`
	TablesRemoved         []string `protobuf:"bytes,3,rep,name=tables_removed,json=tablesRemoved,proto3" json:"tables_removed,omitempty"`
	TablesWithDifferences []string `protobuf:"bytes,4,rep,name=tables_with_differences,json=tablesWithDifferences,proto3" json:"tables_with_differences,omitempty"`
	TablesAdded           []string `protobuf:"bytes,5,rep,name=tables_added,json=tablesAdded,proto3" json:"tables_added,omitempty"`
}

func (x *MetadataMessage_M3EnvironmentTableDiffs) Reset() {
	*x = MetadataMessage_M3EnvironmentTableDiffs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataMessage_M3EnvironmentTableDiffs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataMessage_M3EnvironmentTableDiffs) ProtoMessage() {}

func (x *MetadataMessage_M3EnvironmentTableDiffs) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataMessage_M3EnvironmentTableDiffs.ProtoReflect.Descriptor instead.
func (*MetadataMessage_M3EnvironmentTableDiffs) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{0, 8}
}

func (x *MetadataMessage_M3EnvironmentTableDiffs) GetReferenceEnvironment() string {
	if x != nil {
		return x.ReferenceEnvironment
	}
	return ""
}

func (x *MetadataMessage_M3EnvironmentTableDiffs) GetComparedEnvironment() string {
	if x != nil {
		return x.ComparedEnvironment
	}
	return ""
}

func (x *MetadataMessage_M3EnvironmentTableDiffs) GetTablesRemoved() []string {
	if x != nil {
		return x.TablesRemoved
	}
	return nil
}

func (x *MetadataMessage_M3EnvironmentTableDiffs) GetTablesWithDifferences() []string {
	if x != nil {
		return x.TablesWithDifferences
	}
	return nil
}

func (x *MetadataMessage_M3EnvironmentTableDiffs) GetTablesAdded() []string {
	if x != nil {
		return x.TablesAdded
	}
	return nil
}

type MetadataMessage_TableMetadata_ColumnMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string                                                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type          MetadataMessage_TableMetadata_ColumnMetadata_FieldType `protobuf:"varint,2,opt,name=type,proto3,enum=dolittle.integrations.m3.metadata.MetadataMessage_TableMetadata_ColumnMetadata_FieldType" json:"type,omitempty"`
	FieldLength   int32                                                  `protobuf:"varint,3,opt,name=field_length,json=fieldLength,proto3" json:"field_length,omitempty"`
	DecimalPlaces int32                                                  `protobuf:"varint,4,opt,name=decimal_places,json=decimalPlaces,proto3" json:"decimal_places,omitempty"`
	Description   string                                                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *MetadataMessage_TableMetadata_ColumnMetadata) Reset() {
	*x = MetadataMessage_TableMetadata_ColumnMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataMessage_TableMetadata_ColumnMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataMessage_TableMetadata_ColumnMetadata) ProtoMessage() {}

func (x *MetadataMessage_TableMetadata_ColumnMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataMessage_TableMetadata_ColumnMetadata.ProtoReflect.Descriptor instead.
func (*MetadataMessage_TableMetadata_ColumnMetadata) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *MetadataMessage_TableMetadata_ColumnMetadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MetadataMessage_TableMetadata_ColumnMetadata) GetType() MetadataMessage_TableMetadata_ColumnMetadata_FieldType {
	if x != nil {
		return x.Type
	}
	return MetadataMessage_TableMetadata_ColumnMetadata_string
}

func (x *MetadataMessage_TableMetadata_ColumnMetadata) GetFieldLength() int32 {
	if x != nil {
		return x.FieldLength
	}
	return 0
}

func (x *MetadataMessage_TableMetadata_ColumnMetadata) GetDecimalPlaces() int32 {
	if x != nil {
		return x.DecimalPlaces
	}
	return 0
}

func (x *MetadataMessage_TableMetadata_ColumnMetadata) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type MetadataMessage_TableMetadata_Index struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string                                             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Columns []*MetadataMessage_TableMetadata_Index_IndexColumn `protobuf:"bytes,2,rep,name=columns,proto3" json:"columns,omitempty"`
	Unique  bool                                               `protobuf:"varint,3,opt,name=unique,proto3" json:"unique,omitempty"`
}

func (x *MetadataMessage_TableMetadata_Index) Reset() {
	*x = MetadataMessage_TableMetadata_Index{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataMessage_TableMetadata_Index) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataMessage_TableMetadata_Index) ProtoMessage() {}

func (x *MetadataMessage_TableMetadata_Index) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataMessage_TableMetadata_Index.ProtoReflect.Descriptor instead.
func (*MetadataMessage_TableMetadata_Index) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{0, 0, 1}
}

func (x *MetadataMessage_TableMetadata_Index) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MetadataMessage_TableMetadata_Index) GetColumns() []*MetadataMessage_TableMetadata_Index_IndexColumn {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *MetadataMessage_TableMetadata_Index) GetUnique() bool {
	if x != nil {
		return x.Unique
	}
	return false
}

type MetadataMessage_TableMetadata_ForeignKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Table string                                                         `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	Key   []*MetadataMessage_TableMetadata_ForeignKey_ForeignKeyRelation `protobuf:"bytes,2,rep,name=key,proto3" json:"key,omitempty"`
	// How many programs are using these tables together. Heuristic for how tightly coupled they are.
	Importance int32 `protobuf:"varint,3,opt,name=importance,proto3" json:"importance,omitempty"`
}

func (x *MetadataMessage_TableMetadata_ForeignKey) Reset() {
	*x = MetadataMessage_TableMetadata_ForeignKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataMessage_TableMetadata_ForeignKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataMessage_TableMetadata_ForeignKey) ProtoMessage() {}

func (x *MetadataMessage_TableMetadata_ForeignKey) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataMessage_TableMetadata_ForeignKey.ProtoReflect.Descriptor instead.
func (*MetadataMessage_TableMetadata_ForeignKey) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{0, 0, 2}
}

func (x *MetadataMessage_TableMetadata_ForeignKey) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *MetadataMessage_TableMetadata_ForeignKey) GetKey() []*MetadataMessage_TableMetadata_ForeignKey_ForeignKeyRelation {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *MetadataMessage_TableMetadata_ForeignKey) GetImportance() int32 {
	if x != nil {
		return x.Importance
	}
	return 0
}

type MetadataMessage_TableMetadata_Index_IndexColumn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string                                                        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Direction MetadataMessage_TableMetadata_Index_IndexColumn_SortDirection `protobuf:"varint,2,opt,name=direction,proto3,enum=dolittle.integrations.m3.metadata.MetadataMessage_TableMetadata_Index_IndexColumn_SortDirection" json:"direction,omitempty"`
}

func (x *MetadataMessage_TableMetadata_Index_IndexColumn) Reset() {
	*x = MetadataMessage_TableMetadata_Index_IndexColumn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataMessage_TableMetadata_Index_IndexColumn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataMessage_TableMetadata_Index_IndexColumn) ProtoMessage() {}

func (x *MetadataMessage_TableMetadata_Index_IndexColumn) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataMessage_TableMetadata_Index_IndexColumn.ProtoReflect.Descriptor instead.
func (*MetadataMessage_TableMetadata_Index_IndexColumn) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{0, 0, 1, 0}
}

func (x *MetadataMessage_TableMetadata_Index_IndexColumn) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MetadataMessage_TableMetadata_Index_IndexColumn) GetDirection() MetadataMessage_TableMetadata_Index_IndexColumn_SortDirection {
	if x != nil {
		return x.Direction
	}
	return MetadataMessage_TableMetadata_Index_IndexColumn_Ascending
}

type MetadataMessage_TableMetadata_ForeignKey_ForeignKeyRelation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Column           string `protobuf:"bytes,1,opt,name=column,proto3" json:"column,omitempty"`
	ReferencedColumn string `protobuf:"bytes,2,opt,name=referenced_column,json=referencedColumn,proto3" json:"referenced_column,omitempty"`
}

func (x *MetadataMessage_TableMetadata_ForeignKey_ForeignKeyRelation) Reset() {
	*x = MetadataMessage_TableMetadata_ForeignKey_ForeignKeyRelation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataMessage_TableMetadata_ForeignKey_ForeignKeyRelation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataMessage_TableMetadata_ForeignKey_ForeignKeyRelation) ProtoMessage() {}

func (x *MetadataMessage_TableMetadata_ForeignKey_ForeignKeyRelation) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataMessage_TableMetadata_ForeignKey_ForeignKeyRelation.ProtoReflect.Descriptor instead.
func (*MetadataMessage_TableMetadata_ForeignKey_ForeignKeyRelation) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{0, 0, 2, 0}
}

func (x *MetadataMessage_TableMetadata_ForeignKey_ForeignKeyRelation) GetColumn() string {
	if x != nil {
		return x.Column
	}
	return ""
}

func (x *MetadataMessage_TableMetadata_ForeignKey_ForeignKeyRelation) GetReferencedColumn() string {
	if x != nil {
		return x.ReferencedColumn
	}
	return ""
}

type MetadataMessage_ProgramMetadata_TableUsage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Table     string `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	UsageType string `protobuf:"bytes,2,opt,name=usage_type,json=usageType,proto3" json:"usage_type,omitempty"`
}

func (x *MetadataMessage_ProgramMetadata_TableUsage) Reset() {
	*x = MetadataMessage_ProgramMetadata_TableUsage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataMessage_ProgramMetadata_TableUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataMessage_ProgramMetadata_TableUsage) ProtoMessage() {}

func (x *MetadataMessage_ProgramMetadata_TableUsage) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataMessage_ProgramMetadata_TableUsage.ProtoReflect.Descriptor instead.
func (*MetadataMessage_ProgramMetadata_TableUsage) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{0, 1, 0}
}

func (x *MetadataMessage_ProgramMetadata_TableUsage) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *MetadataMessage_ProgramMetadata_TableUsage) GetUsageType() string {
	if x != nil {
		return x.UsageType
	}
	return ""
}

type MetadataMessage_DeploymentStatus_Failure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HttpStatus int32  `protobuf:"varint,1,opt,name=http_status,json=httpStatus,proto3" json:"http_status,omitempty"`
	Error      string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *MetadataMessage_DeploymentStatus_Failure) Reset() {
	*x = MetadataMessage_DeploymentStatus_Failure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataMessage_DeploymentStatus_Failure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataMessage_DeploymentStatus_Failure) ProtoMessage() {}

func (x *MetadataMessage_DeploymentStatus_Failure) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataMessage_DeploymentStatus_Failure.ProtoReflect.Descriptor instead.
func (*MetadataMessage_DeploymentStatus_Failure) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{0, 2, 0}
}

func (x *MetadataMessage_DeploymentStatus_Failure) GetHttpStatus() int32 {
	if x != nil {
		return x.HttpStatus
	}
	return 0
}

func (x *MetadataMessage_DeploymentStatus_Failure) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type MetadataMessage_M3Environment_Table struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Component   string `protobuf:"bytes,3,opt,name=component,proto3" json:"component,omitempty"`
}

func (x *MetadataMessage_M3Environment_Table) Reset() {
	*x = MetadataMessage_M3Environment_Table{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataMessage_M3Environment_Table) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataMessage_M3Environment_Table) ProtoMessage() {}

func (x *MetadataMessage_M3Environment_Table) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataMessage_M3Environment_Table.ProtoReflect.Descriptor instead.
func (*MetadataMessage_M3Environment_Table) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{0, 6, 0}
}

func (x *MetadataMessage_M3Environment_Table) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MetadataMessage_M3Environment_Table) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MetadataMessage_M3Environment_Table) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

type MetadataMessage_M3Environment_Program struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Component   string `protobuf:"bytes,3,opt,name=component,proto3" json:"component,omitempty"`
}

func (x *MetadataMessage_M3Environment_Program) Reset() {
	*x = MetadataMessage_M3Environment_Program{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataMessage_M3Environment_Program) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataMessage_M3Environment_Program) ProtoMessage() {}

func (x *MetadataMessage_M3Environment_Program) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataMessage_M3Environment_Program.ProtoReflect.Descriptor instead.
func (*MetadataMessage_M3Environment_Program) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{0, 6, 1}
}

func (x *MetadataMessage_M3Environment_Program) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MetadataMessage_M3Environment_Program) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MetadataMessage_M3Environment_Program) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

// List all environments in the deployment
type MetadataRequest_Deployment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MetadataRequest_Deployment) Reset() {
	*x = MetadataRequest_Deployment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataRequest_Deployment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataRequest_Deployment) ProtoMessage() {}

func (x *MetadataRequest_Deployment) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataRequest_Deployment.ProtoReflect.Descriptor instead.
func (*MetadataRequest_Deployment) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{1, 0}
}

// Get more detailed System information for all environments in the deployment
type MetadataRequest_DeploymentSystems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MetadataRequest_DeploymentSystems) Reset() {
	*x = MetadataRequest_DeploymentSystems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataRequest_DeploymentSystems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataRequest_DeploymentSystems) ProtoMessage() {}

func (x *MetadataRequest_DeploymentSystems) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataRequest_DeploymentSystems.ProtoReflect.Descriptor instead.
func (*MetadataRequest_DeploymentSystems) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{1, 1}
}

// Get the metadata for a set of tables
// Metadata for each table will be returned as individual messages
type MetadataRequest_Tables struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	M3Environment      string   `protobuf:"bytes,1,opt,name=m3_environment,json=m3Environment,proto3" json:"m3_environment,omitempty"`
	Tables             []string `protobuf:"bytes,2,rep,name=tables,proto3" json:"tables,omitempty"`
	IncludeIndexes     bool     `protobuf:"varint,3,opt,name=include_indexes,json=includeIndexes,proto3" json:"include_indexes,omitempty"`
	IncludeForeignKeys bool     `protobuf:"varint,4,opt,name=include_foreign_keys,json=includeForeignKeys,proto3" json:"include_foreign_keys,omitempty"`
}

func (x *MetadataRequest_Tables) Reset() {
	*x = MetadataRequest_Tables{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataRequest_Tables) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataRequest_Tables) ProtoMessage() {}

func (x *MetadataRequest_Tables) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataRequest_Tables.ProtoReflect.Descriptor instead.
func (*MetadataRequest_Tables) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{1, 2}
}

func (x *MetadataRequest_Tables) GetM3Environment() string {
	if x != nil {
		return x.M3Environment
	}
	return ""
}

func (x *MetadataRequest_Tables) GetTables() []string {
	if x != nil {
		return x.Tables
	}
	return nil
}

func (x *MetadataRequest_Tables) GetIncludeIndexes() bool {
	if x != nil {
		return x.IncludeIndexes
	}
	return false
}

func (x *MetadataRequest_Tables) GetIncludeForeignKeys() bool {
	if x != nil {
		return x.IncludeForeignKeys
	}
	return false
}

// Get the metadata for a table
type MetadataRequest_Table struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	M3Environment      string `protobuf:"bytes,1,opt,name=m3_environment,json=m3Environment,proto3" json:"m3_environment,omitempty"`
	Table              string `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
	IncludeIndexes     bool   `protobuf:"varint,3,opt,name=include_indexes,json=includeIndexes,proto3" json:"include_indexes,omitempty"`
	IncludeForeignKeys bool   `protobuf:"varint,4,opt,name=include_foreign_keys,json=includeForeignKeys,proto3" json:"include_foreign_keys,omitempty"`
}

func (x *MetadataRequest_Table) Reset() {
	*x = MetadataRequest_Table{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataRequest_Table) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataRequest_Table) ProtoMessage() {}

func (x *MetadataRequest_Table) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataRequest_Table.ProtoReflect.Descriptor instead.
func (*MetadataRequest_Table) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{1, 3}
}

func (x *MetadataRequest_Table) GetM3Environment() string {
	if x != nil {
		return x.M3Environment
	}
	return ""
}

func (x *MetadataRequest_Table) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *MetadataRequest_Table) GetIncludeIndexes() bool {
	if x != nil {
		return x.IncludeIndexes
	}
	return false
}

func (x *MetadataRequest_Table) GetIncludeForeignKeys() bool {
	if x != nil {
		return x.IncludeForeignKeys
	}
	return false
}

// Get the metadata for a set of programs
// Metadata for each program will be returned as individual messages
type MetadataRequest_Programs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	M3Environment string   `protobuf:"bytes,1,opt,name=m3_environment,json=m3Environment,proto3" json:"m3_environment,omitempty"`
	Programs      []string `protobuf:"bytes,2,rep,name=programs,proto3" json:"programs,omitempty"`
}

func (x *MetadataRequest_Programs) Reset() {
	*x = MetadataRequest_Programs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataRequest_Programs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataRequest_Programs) ProtoMessage() {}

func (x *MetadataRequest_Programs) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataRequest_Programs.ProtoReflect.Descriptor instead.
func (*MetadataRequest_Programs) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{1, 4}
}

func (x *MetadataRequest_Programs) GetM3Environment() string {
	if x != nil {
		return x.M3Environment
	}
	return ""
}

func (x *MetadataRequest_Programs) GetPrograms() []string {
	if x != nil {
		return x.Programs
	}
	return nil
}

// Get the metadata for a program
type MetadataRequest_Program struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	M3Environment string `protobuf:"bytes,1,opt,name=m3_environment,json=m3Environment,proto3" json:"m3_environment,omitempty"`
	Program       string `protobuf:"bytes,2,opt,name=program,proto3" json:"program,omitempty"`
}

func (x *MetadataRequest_Program) Reset() {
	*x = MetadataRequest_Program{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataRequest_Program) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataRequest_Program) ProtoMessage() {}

func (x *MetadataRequest_Program) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataRequest_Program.ProtoReflect.Descriptor instead.
func (*MetadataRequest_Program) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{1, 5}
}

func (x *MetadataRequest_Program) GetM3Environment() string {
	if x != nil {
		return x.M3Environment
	}
	return ""
}

func (x *MetadataRequest_Program) GetProgram() string {
	if x != nil {
		return x.Program
	}
	return ""
}

// List all tables / programs in the environment
type MetadataRequest_Environment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	M3Environment   string `protobuf:"bytes,1,opt,name=m3_environment,json=m3Environment,proto3" json:"m3_environment,omitempty"`
	IncludeTables   bool   `protobuf:"varint,2,opt,name=include_tables,json=includeTables,proto3" json:"include_tables,omitempty"`
	IncludePrograms bool   `protobuf:"varint,3,opt,name=include_programs,json=includePrograms,proto3" json:"include_programs,omitempty"`
}

func (x *MetadataRequest_Environment) Reset() {
	*x = MetadataRequest_Environment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataRequest_Environment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataRequest_Environment) ProtoMessage() {}

func (x *MetadataRequest_Environment) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataRequest_Environment.ProtoReflect.Descriptor instead.
func (*MetadataRequest_Environment) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{1, 6}
}

func (x *MetadataRequest_Environment) GetM3Environment() string {
	if x != nil {
		return x.M3Environment
	}
	return ""
}

func (x *MetadataRequest_Environment) GetIncludeTables() bool {
	if x != nil {
		return x.IncludeTables
	}
	return false
}

func (x *MetadataRequest_Environment) GetIncludePrograms() bool {
	if x != nil {
		return x.IncludePrograms
	}
	return false
}

// List the changes in tables between two environments, including removed and added tables
type MetadataRequest_EnvironmentTableDiffs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReferenceM3Environment string `protobuf:"bytes,1,opt,name=reference_m3_environment,json=referenceM3Environment,proto3" json:"reference_m3_environment,omitempty"`
	ComparedM3Environment  string `protobuf:"bytes,2,opt,name=compared_m3_environment,json=comparedM3Environment,proto3" json:"compared_m3_environment,omitempty"`
}

func (x *MetadataRequest_EnvironmentTableDiffs) Reset() {
	*x = MetadataRequest_EnvironmentTableDiffs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataRequest_EnvironmentTableDiffs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataRequest_EnvironmentTableDiffs) ProtoMessage() {}

func (x *MetadataRequest_EnvironmentTableDiffs) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataRequest_EnvironmentTableDiffs.ProtoReflect.Descriptor instead.
func (*MetadataRequest_EnvironmentTableDiffs) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{1, 7}
}

func (x *MetadataRequest_EnvironmentTableDiffs) GetReferenceM3Environment() string {
	if x != nil {
		return x.ReferenceM3Environment
	}
	return ""
}

func (x *MetadataRequest_EnvironmentTableDiffs) GetComparedM3Environment() string {
	if x != nil {
		return x.ComparedM3Environment
	}
	return ""
}

// Lists the changed tables between two environments.
type MetadataRequest_EnvironmentColumnDiffs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReferenceM3Environment string `protobuf:"bytes,1,opt,name=reference_m3_environment,json=referenceM3Environment,proto3" json:"reference_m3_environment,omitempty"`
	ComparedM3Environment  string `protobuf:"bytes,2,opt,name=compared_m3_environment,json=comparedM3Environment,proto3" json:"compared_m3_environment,omitempty"`
}

func (x *MetadataRequest_EnvironmentColumnDiffs) Reset() {
	*x = MetadataRequest_EnvironmentColumnDiffs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataRequest_EnvironmentColumnDiffs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataRequest_EnvironmentColumnDiffs) ProtoMessage() {}

func (x *MetadataRequest_EnvironmentColumnDiffs) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataRequest_EnvironmentColumnDiffs.ProtoReflect.Descriptor instead.
func (*MetadataRequest_EnvironmentColumnDiffs) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{1, 8}
}

func (x *MetadataRequest_EnvironmentColumnDiffs) GetReferenceM3Environment() string {
	if x != nil {
		return x.ReferenceM3Environment
	}
	return ""
}

func (x *MetadataRequest_EnvironmentColumnDiffs) GetComparedM3Environment() string {
	if x != nil {
		return x.ComparedM3Environment
	}
	return ""
}

// Get the status of the metadata service
type MetadataRequest_Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MetadataRequest_Status) Reset() {
	*x = MetadataRequest_Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataRequest_Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataRequest_Status) ProtoMessage() {}

func (x *MetadataRequest_Status) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataRequest_Status.ProtoReflect.Descriptor instead.
func (*MetadataRequest_Status) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{1, 9}
}

// Cancel a specific request
type MetadataRequest_Cancel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *MetadataRequest_Cancel) Reset() {
	*x = MetadataRequest_Cancel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataRequest_Cancel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataRequest_Cancel) ProtoMessage() {}

func (x *MetadataRequest_Cancel) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataRequest_Cancel.ProtoReflect.Descriptor instead.
func (*MetadataRequest_Cancel) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{1, 10}
}

func (x *MetadataRequest_Cancel) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

// Cancel all metadata requests in queue for the deployment
type MetadataRequest_CancelAll struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MetadataRequest_CancelAll) Reset() {
	*x = MetadataRequest_CancelAll{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataRequest_CancelAll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataRequest_CancelAll) ProtoMessage() {}

func (x *MetadataRequest_CancelAll) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataRequest_CancelAll.ProtoReflect.Descriptor instead.
func (*MetadataRequest_CancelAll) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{1, 11}
}

type MetadataRequest_ByDataType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataType    string                            `protobuf:"bytes,1,opt,name=data_type,json=dataType,proto3" json:"data_type,omitempty"`
	Identifiers []*MetadataRequest_ByDataType_Tag `protobuf:"bytes,2,rep,name=identifiers,proto3" json:"identifiers,omitempty"`
}

func (x *MetadataRequest_ByDataType) Reset() {
	*x = MetadataRequest_ByDataType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataRequest_ByDataType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataRequest_ByDataType) ProtoMessage() {}

func (x *MetadataRequest_ByDataType) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataRequest_ByDataType.ProtoReflect.Descriptor instead.
func (*MetadataRequest_ByDataType) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{1, 12}
}

func (x *MetadataRequest_ByDataType) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *MetadataRequest_ByDataType) GetIdentifiers() []*MetadataRequest_ByDataType_Tag {
	if x != nil {
		return x.Identifiers
	}
	return nil
}

type MetadataRequest_ByDataType_Tag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *MetadataRequest_ByDataType_Tag) Reset() {
	*x = MetadataRequest_ByDataType_Tag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_M3_Metadata_Metadata_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataRequest_ByDataType_Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataRequest_ByDataType_Tag) ProtoMessage() {}

func (x *MetadataRequest_ByDataType_Tag) ProtoReflect() protoreflect.Message {
	mi := &file_M3_Metadata_Metadata_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataRequest_ByDataType_Tag.ProtoReflect.Descriptor instead.
func (*MetadataRequest_ByDataType_Tag) Descriptor() ([]byte, []int) {
	return file_M3_Metadata_Metadata_proto_rawDescGZIP(), []int{1, 12, 0}
}

func (x *MetadataRequest_ByDataType_Tag) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *MetadataRequest_ByDataType_Tag) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_M3_Metadata_Metadata_proto protoreflect.FileDescriptor

var file_M3_Metadata_Metadata_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x4d, 0x33, 0x2f, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x21, 0x64, 0x6f,
	0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x33, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x9c, 0x26, 0x0a, 0x0f, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x78, 0x0a,
	0x13, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x64, 0x6f, 0x6c,
	0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x6d, 0x33, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x48, 0x00, 0x52, 0x12, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x69, 0x0a, 0x0e, 0x6d, 0x33, 0x5f, 0x65, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x40, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x33, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x4d, 0x33, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x48, 0x00, 0x52, 0x0d, 0x6d, 0x33, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x69, 0x0a, 0x0e, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x64, 0x6f, 0x6c,
	0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x6d, 0x33, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0d,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x89, 0x01,
	0x0a, 0x1a, 0x6d, 0x33, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x73, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x33, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x33, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x69, 0x66, 0x66, 0x73, 0x48, 0x00,
	0x52, 0x17, 0x6d, 0x33, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x44, 0x69, 0x66, 0x66, 0x73, 0x12, 0x8c, 0x01, 0x0a, 0x1b, 0x6d, 0x33,
	0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x4b, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x33, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x4d, 0x33, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x44, 0x69, 0x66, 0x66, 0x73, 0x48, 0x00, 0x52, 0x18,
	0x6d, 0x33, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x44, 0x69, 0x66, 0x66, 0x73, 0x12, 0x72, 0x0a, 0x11, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x33, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x10, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x6f, 0x0a, 0x10,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c,
	0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d,
	0x33, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0f, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x8b, 0x01,
	0x0a, 0x1a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x4b, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x33, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x48,
	0x00, 0x52, 0x18, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0xf8, 0x0b, 0x0a, 0x0d,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x69, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x33, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x67,
	0x0a, 0x0b, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x33, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x0a, 0x70, 0x72, 0x69,
	0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x60, 0x0a, 0x07, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74,
	0x74, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x6d, 0x33, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x07, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x12, 0x6e, 0x0a, 0x0c, 0x66, 0x6f, 0x72,
	0x65, 0x69, 0x67, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x4b, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x33, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x46, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x0b, 0x66, 0x6f,
	0x72, 0x65, 0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0xa4, 0x02, 0x0a, 0x0e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x6d, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x59, 0x2e, 0x64, 0x6f, 0x6c,
	0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x6d, 0x33, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x25,
	0x0a, 0x0e, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x50,
	0x6c, 0x61, 0x63, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x23, 0x0a, 0x09, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x10, 0x00,
	0x12, 0x0a, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x10, 0x01, 0x1a, 0xf5, 0x02, 0x0a,
	0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x6c, 0x0a, 0x07, 0x63, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x52, 0x2e, 0x64, 0x6f,
	0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x33, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52,
	0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x69, 0x71,
	0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65,
	0x1a, 0xd1, 0x01, 0x0a, 0x0b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x7e, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x60, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74,
	0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x6d, 0x33, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x2e,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x2e, 0x53, 0x6f, 0x72, 0x74,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2e, 0x0a, 0x0d, 0x53, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x10, 0x01, 0x1a, 0x8f, 0x02, 0x0a, 0x0a, 0x46, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e,
	0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x70, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x5e, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c,
	0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d,
	0x33, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x46, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e,
	0x4b, 0x65, 0x79, 0x2e, 0x46, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x69,
	0x6d, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x1a, 0x59, 0x0a, 0x12, 0x46,
	0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x64,
	0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x1a, 0xfb, 0x02, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x6e, 0x0a, 0x0b, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x4d, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x33, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0a,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x55, 0x73, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x55, 0x73, 0x65, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x1a, 0x41, 0x0a, 0x0a, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x61, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x1a, 0xc8, 0x02, 0x0a, 0x10, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x64, 0x70,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x64, 0x70, 0x55,
	0x72, 0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x6a, 0x0a, 0x07, 0x66,
	0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4b, 0x2e, 0x64,
	0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x33, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x48, 0x00, 0x52, 0x07, 0x66, 0x61, 0x69,
	0x6c, 0x75, 0x72, 0x65, 0x88, 0x01, 0x01, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x1a, 0x40, 0x0a, 0x07, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x68, 0x74, 0x74, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x68, 0x74, 0x74, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x1a,
	0x64, 0x0a, 0x12, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x64, 0x70, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x64, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x35,
	0x0a, 0x16, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x15,
	0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x93, 0x01, 0x0a, 0x18, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x64, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x64, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x5e, 0x0a, 0x07, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x64,
	0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x33, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x07, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0xbc, 0x02, 0x0a, 0x11,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x65, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x65, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x65, 0x5f, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x62, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a,
	0x0c, 0x62, 0x65, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0xa8, 0x04, 0x0a, 0x0d, 0x4d,
	0x33, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x5e, 0x0a, 0x06,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x64,
	0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x33, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x4d, 0x33, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x64, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x48,
	0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x33, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x4d, 0x33, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x73, 0x0a, 0x12, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x44, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x33, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x5b, 0x0a, 0x05, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x1a, 0x5d, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61,
	0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x1a, 0x9a, 0x01, 0x0a, 0x18, 0x4d, 0x33, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x44, 0x69, 0x66,
	0x66, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x31, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x32, 0x12, 0x36, 0x0a, 0x17, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x73, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x15, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x57, 0x69, 0x74, 0x68, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x73, 0x1a, 0x83, 0x02, 0x0a, 0x17, 0x4d, 0x33, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x69, 0x66, 0x66, 0x73, 0x12, 0x33,
	0x0a, 0x15, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x64, 0x5f,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x64, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73,
	0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x36, 0x0a,
	0x17, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x64, 0x69, 0x66,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x15,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x57, 0x69, 0x74, 0x68, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x5f,
	0x61, 0x64, 0x64, 0x65, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x41, 0x64, 0x64, 0x65, 0x64, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x22,
	0xb1, 0x16, 0x0a, 0x0f, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12,
	0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x6e, 0x0a, 0x12, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3d, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x33, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00,
	0x52, 0x11, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x76, 0x0a, 0x16, 0x6d, 0x33, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x33, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x14, 0x6d, 0x33, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x73, 0x0a, 0x17, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x64,
	0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x33, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x48, 0x00, 0x52, 0x15, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x8b, 0x01, 0x0a, 0x1c, 0x6d, 0x33, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74,
	0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x6d, 0x33, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x69, 0x66, 0x66,
	0x73, 0x48, 0x00, 0x52, 0x19, 0x6d, 0x33, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x44, 0x69, 0x66, 0x66, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x61,
	0x0a, 0x0c, 0x62, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x33, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x42, 0x79, 0x44, 0x61, 0x74, 0x61, 0x54,
	0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x62, 0x79, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x62, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x64, 0x6f, 0x6c, 0x69,
	0x74, 0x74, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x6d, 0x33, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x99, 0x01, 0x0a, 0x23, 0x6d, 0x33, 0x5f, 0x65, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f,
	0x64, 0x69, 0x66, 0x66, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x33, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x44, 0x69, 0x66, 0x66, 0x73, 0x48, 0x00,
	0x52, 0x1f, 0x6d, 0x33, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x44, 0x69, 0x66, 0x66, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x79, 0x0a, 0x19, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x5f, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x33, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x73, 0x48, 0x00, 0x52, 0x17, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x76, 0x0a, 0x18,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a,
	0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x33, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x48, 0x00, 0x52, 0x16, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x70, 0x0a, 0x16, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x33, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x48, 0x00,
	0x52, 0x14, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x84, 0x01, 0x0a, 0x1a, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x64, 0x6f,
	0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x33, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x73, 0x48, 0x00, 0x52, 0x18, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x63, 0x0a,
	0x0e, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x90, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c,
	0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d,
	0x33, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x6d, 0x0a, 0x12, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x61, 0x6c, 0x6c,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x93, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3c, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6d, 0x33, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x48, 0x00, 0x52,
	0x10, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x0c, 0x0a, 0x0a, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x1a,
	0x13, 0x0a, 0x11, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x73, 0x1a, 0xa2, 0x01, 0x0a, 0x06, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12,
	0x25, 0x0a, 0x0e, 0x6d, 0x33, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x33, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x27,
	0x0a, 0x0f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x69, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x46, 0x6f,
	0x72, 0x65, 0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x73, 0x1a, 0x9f, 0x01, 0x0a, 0x05, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x33, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x33, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x5f, 0x6b, 0x65, 0x79,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x46, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x73, 0x1a, 0x4d, 0x0a, 0x08, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x33, 0x5f, 0x65, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x6d, 0x33, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x4a, 0x0a, 0x07, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x33, 0x5f, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d,
	0x33, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70,
	0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x1a, 0x86, 0x01, 0x0a, 0x0b, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x33, 0x5f, 0x65, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6d, 0x33, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a,
	0x0e, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f,
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x1a,
	0x89, 0x01, 0x0a, 0x15, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x44, 0x69, 0x66, 0x66, 0x73, 0x12, 0x38, 0x0a, 0x18, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6d, 0x33, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4d, 0x33, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x64, 0x5f,
	0x6d, 0x33, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x64, 0x4d, 0x33,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x8a, 0x01, 0x0a, 0x16,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x44, 0x69, 0x66, 0x66, 0x73, 0x12, 0x38, 0x0a, 0x18, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x5f, 0x6d, 0x33, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x4d, 0x33, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x36, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x6d, 0x33, 0x5f,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x15, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x64, 0x4d, 0x33, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x08, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x1a, 0x27, 0x0a, 0x06, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x1a, 0x0b, 0x0a, 0x09, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x1a, 0xbd, 0x01, 0x0a, 0x0a, 0x42, 0x79, 0x44,
	0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x63, 0x0a, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x64, 0x6f, 0x6c, 0x69,
	0x74, 0x74, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x6d, 0x33, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x42, 0x79,
	0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x0b, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x1a, 0x2d, 0x0a, 0x03, 0x54, 0x61, 0x67,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x42, 0x64, 0x5a, 0x34, 0x67, 0x6f, 0x2e, 0x64, 0x6f, 0x6c, 0x69, 0x74, 0x74,
	0x6c, 0x65, 0x2e, 0x69, 0x6f, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2f, 0x76, 0x32, 0x2f,
	0x6d, 0x33, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xaa, 0x02, 0x2b, 0x44, 0x6f,
	0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x4d, 0x33,
	0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_M3_Metadata_Metadata_proto_rawDescOnce sync.Once
	file_M3_Metadata_Metadata_proto_rawDescData = file_M3_Metadata_Metadata_proto_rawDesc
)

func file_M3_Metadata_Metadata_proto_rawDescGZIP() []byte {
	file_M3_Metadata_Metadata_proto_rawDescOnce.Do(func() {
		file_M3_Metadata_Metadata_proto_rawDescData = protoimpl.X.CompressGZIP(file_M3_Metadata_Metadata_proto_rawDescData)
	})
	return file_M3_Metadata_Metadata_proto_rawDescData
}

var file_M3_Metadata_Metadata_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_M3_Metadata_Metadata_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_M3_Metadata_Metadata_proto_goTypes = []interface{}{
	(MetadataMessage_TableMetadata_ColumnMetadata_FieldType)(0),        // 0: dolittle.integrations.m3.metadata.MetadataMessage.TableMetadata.ColumnMetadata.FieldType
	(MetadataMessage_TableMetadata_Index_IndexColumn_SortDirection)(0), // 1: dolittle.integrations.m3.metadata.MetadataMessage.TableMetadata.Index.IndexColumn.SortDirection
	(*MetadataMessage)(nil),                                             // 2: dolittle.integrations.m3.metadata.MetadataMessage
	(*MetadataRequest)(nil),                                             // 3: dolittle.integrations.m3.metadata.MetadataRequest
	(*MetadataMessage_TableMetadata)(nil),                               // 4: dolittle.integrations.m3.metadata.MetadataMessage.TableMetadata
	(*MetadataMessage_ProgramMetadata)(nil),                             // 5: dolittle.integrations.m3.metadata.MetadataMessage.ProgramMetadata
	(*MetadataMessage_DeploymentStatus)(nil),                            // 6: dolittle.integrations.m3.metadata.MetadataMessage.DeploymentStatus
	(*MetadataMessage_DeploymentMetadata)(nil),                          // 7: dolittle.integrations.m3.metadata.MetadataMessage.DeploymentMetadata
	(*MetadataMessage_DeploymentSystemMetadata)(nil),                    // 8: dolittle.integrations.m3.metadata.MetadataMessage.DeploymentSystemMetadata
	(*MetadataMessage_SystemInformation)(nil),                           // 9: dolittle.integrations.m3.metadata.MetadataMessage.SystemInformation
	(*MetadataMessage_M3Environment)(nil),                               // 10: dolittle.integrations.m3.metadata.MetadataMessage.M3Environment
	(*MetadataMessage_M3EnvironmentColumnDiffs)(nil),                    // 11: dolittle.integrations.m3.metadata.MetadataMessage.M3EnvironmentColumnDiffs
	(*MetadataMessage_M3EnvironmentTableDiffs)(nil),                     // 12: dolittle.integrations.m3.metadata.MetadataMessage.M3EnvironmentTableDiffs
	(*MetadataMessage_TableMetadata_ColumnMetadata)(nil),                // 13: dolittle.integrations.m3.metadata.MetadataMessage.TableMetadata.ColumnMetadata
	(*MetadataMessage_TableMetadata_Index)(nil),                         // 14: dolittle.integrations.m3.metadata.MetadataMessage.TableMetadata.Index
	(*MetadataMessage_TableMetadata_ForeignKey)(nil),                    // 15: dolittle.integrations.m3.metadata.MetadataMessage.TableMetadata.ForeignKey
	(*MetadataMessage_TableMetadata_Index_IndexColumn)(nil),             // 16: dolittle.integrations.m3.metadata.MetadataMessage.TableMetadata.Index.IndexColumn
	(*MetadataMessage_TableMetadata_ForeignKey_ForeignKeyRelation)(nil), // 17: dolittle.integrations.m3.metadata.MetadataMessage.TableMetadata.ForeignKey.ForeignKeyRelation
	(*MetadataMessage_ProgramMetadata_TableUsage)(nil),                  // 18: dolittle.integrations.m3.metadata.MetadataMessage.ProgramMetadata.TableUsage
	(*MetadataMessage_DeploymentStatus_Failure)(nil),                    // 19: dolittle.integrations.m3.metadata.MetadataMessage.DeploymentStatus.Failure
	(*MetadataMessage_M3Environment_Table)(nil),                         // 20: dolittle.integrations.m3.metadata.MetadataMessage.M3Environment.Table
	(*MetadataMessage_M3Environment_Program)(nil),                       // 21: dolittle.integrations.m3.metadata.MetadataMessage.M3Environment.Program
	(*MetadataRequest_Deployment)(nil),                                  // 22: dolittle.integrations.m3.metadata.MetadataRequest.Deployment
	(*MetadataRequest_DeploymentSystems)(nil),                           // 23: dolittle.integrations.m3.metadata.MetadataRequest.DeploymentSystems
	(*MetadataRequest_Tables)(nil),                                      // 24: dolittle.integrations.m3.metadata.MetadataRequest.Tables
	(*MetadataRequest_Table)(nil),                                       // 25: dolittle.integrations.m3.metadata.MetadataRequest.Table
	(*MetadataRequest_Programs)(nil),                                    // 26: dolittle.integrations.m3.metadata.MetadataRequest.Programs
	(*MetadataRequest_Program)(nil),                                     // 27: dolittle.integrations.m3.metadata.MetadataRequest.Program
	(*MetadataRequest_Environment)(nil),                                 // 28: dolittle.integrations.m3.metadata.MetadataRequest.Environment
	(*MetadataRequest_EnvironmentTableDiffs)(nil),                       // 29: dolittle.integrations.m3.metadata.MetadataRequest.EnvironmentTableDiffs
	(*MetadataRequest_EnvironmentColumnDiffs)(nil),                      // 30: dolittle.integrations.m3.metadata.MetadataRequest.EnvironmentColumnDiffs
	(*MetadataRequest_Status)(nil),                                      // 31: dolittle.integrations.m3.metadata.MetadataRequest.Status
	(*MetadataRequest_Cancel)(nil),                                      // 32: dolittle.integrations.m3.metadata.MetadataRequest.Cancel
	(*MetadataRequest_CancelAll)(nil),                                   // 33: dolittle.integrations.m3.metadata.MetadataRequest.CancelAll
	(*MetadataRequest_ByDataType)(nil),                                  // 34: dolittle.integrations.m3.metadata.MetadataRequest.ByDataType
	(*MetadataRequest_ByDataType_Tag)(nil),                              // 35: dolittle.integrations.m3.metadata.MetadataRequest.ByDataType.Tag
	(*timestamppb.Timestamp)(nil),                                       // 36: google.protobuf.Timestamp
}
var file_M3_Metadata_Metadata_proto_depIdxs = []int32{
	7,  // 0: dolittle.integrations.m3.metadata.MetadataMessage.deployment_metadata:type_name -> dolittle.integrations.m3.metadata.MetadataMessage.DeploymentMetadata
	10, // 1: dolittle.integrations.m3.metadata.MetadataMessage.m3_environment:type_name -> dolittle.integrations.m3.metadata.MetadataMessage.M3Environment
	4,  // 2: dolittle.integrations.m3.metadata.MetadataMessage.table_metadata:type_name -> dolittle.integrations.m3.metadata.MetadataMessage.TableMetadata
	12, // 3: dolittle.integrations.m3.metadata.MetadataMessage.m3_environment_table_diffs:type_name -> dolittle.integrations.m3.metadata.MetadataMessage.M3EnvironmentTableDiffs
	11, // 4: dolittle.integrations.m3.metadata.MetadataMessage.m3_environment_column_diffs:type_name -> dolittle.integrations.m3.metadata.MetadataMessage.M3EnvironmentColumnDiffs
	6,  // 5: dolittle.integrations.m3.metadata.MetadataMessage.deployment_status:type_name -> dolittle.integrations.m3.metadata.MetadataMessage.DeploymentStatus
	5,  // 6: dolittle.integrations.m3.metadata.MetadataMessage.program_metadata:type_name -> dolittle.integrations.m3.metadata.MetadataMessage.ProgramMetadata
	8,  // 7: dolittle.integrations.m3.metadata.MetadataMessage.deployment_system_metadata:type_name -> dolittle.integrations.m3.metadata.MetadataMessage.DeploymentSystemMetadata
	22, // 8: dolittle.integrations.m3.metadata.MetadataRequest.deployment_request:type_name -> dolittle.integrations.m3.metadata.MetadataRequest.Deployment
	28, // 9: dolittle.integrations.m3.metadata.MetadataRequest.m3_environment_request:type_name -> dolittle.integrations.m3.metadata.MetadataRequest.Environment
	24, // 10: dolittle.integrations.m3.metadata.MetadataRequest.tables_metadata_request:type_name -> dolittle.integrations.m3.metadata.MetadataRequest.Tables
	29, // 11: dolittle.integrations.m3.metadata.MetadataRequest.m3_environment_diffs_request:type_name -> dolittle.integrations.m3.metadata.MetadataRequest.EnvironmentTableDiffs
	34, // 12: dolittle.integrations.m3.metadata.MetadataRequest.by_data_type:type_name -> dolittle.integrations.m3.metadata.MetadataRequest.ByDataType
	31, // 13: dolittle.integrations.m3.metadata.MetadataRequest.status_request:type_name -> dolittle.integrations.m3.metadata.MetadataRequest.Status
	30, // 14: dolittle.integrations.m3.metadata.MetadataRequest.m3_environment_column_diffs_request:type_name -> dolittle.integrations.m3.metadata.MetadataRequest.EnvironmentColumnDiffs
	26, // 15: dolittle.integrations.m3.metadata.MetadataRequest.programs_metadata_request:type_name -> dolittle.integrations.m3.metadata.MetadataRequest.Programs
	27, // 16: dolittle.integrations.m3.metadata.MetadataRequest.program_metadata_request:type_name -> dolittle.integrations.m3.metadata.MetadataRequest.Program
	25, // 17: dolittle.integrations.m3.metadata.MetadataRequest.table_metadata_request:type_name -> dolittle.integrations.m3.metadata.MetadataRequest.Table
	23, // 18: dolittle.integrations.m3.metadata.MetadataRequest.deployment_systems_request:type_name -> dolittle.integrations.m3.metadata.MetadataRequest.DeploymentSystems
	32, // 19: dolittle.integrations.m3.metadata.MetadataRequest.cancel_request:type_name -> dolittle.integrations.m3.metadata.MetadataRequest.Cancel
	33, // 20: dolittle.integrations.m3.metadata.MetadataRequest.cancel_all_request:type_name -> dolittle.integrations.m3.metadata.MetadataRequest.CancelAll
	13, // 21: dolittle.integrations.m3.metadata.MetadataMessage.TableMetadata.columns:type_name -> dolittle.integrations.m3.metadata.MetadataMessage.TableMetadata.ColumnMetadata
	14, // 22: dolittle.integrations.m3.metadata.MetadataMessage.TableMetadata.primary_key:type_name -> dolittle.integrations.m3.metadata.MetadataMessage.TableMetadata.Index
	14, // 23: dolittle.integrations.m3.metadata.MetadataMessage.TableMetadata.indexes:type_name -> dolittle.integrations.m3.metadata.MetadataMessage.TableMetadata.Index
	15, // 24: dolittle.integrations.m3.metadata.MetadataMessage.TableMetadata.foreign_keys:type_name -> dolittle.integrations.m3.metadata.MetadataMessage.TableMetadata.ForeignKey
	18, // 25: dolittle.integrations.m3.metadata.MetadataMessage.ProgramMetadata.tables_used:type_name -> dolittle.integrations.m3.metadata.MetadataMessage.ProgramMetadata.TableUsage
	19, // 26: dolittle.integrations.m3.metadata.MetadataMessage.DeploymentStatus.failure:type_name -> dolittle.integrations.m3.metadata.MetadataMessage.DeploymentStatus.Failure
	36, // 27: dolittle.integrations.m3.metadata.MetadataMessage.DeploymentStatus.timestamp:type_name -> google.protobuf.Timestamp
	9,  // 28: dolittle.integrations.m3.metadata.MetadataMessage.DeploymentSystemMetadata.systems:type_name -> dolittle.integrations.m3.metadata.MetadataMessage.SystemInformation
	20, // 29: dolittle.integrations.m3.metadata.MetadataMessage.M3Environment.tables:type_name -> dolittle.integrations.m3.metadata.MetadataMessage.M3Environment.Table
	21, // 30: dolittle.integrations.m3.metadata.MetadataMessage.M3Environment.programs:type_name -> dolittle.integrations.m3.metadata.MetadataMessage.M3Environment.Program
	9,  // 31: dolittle.integrations.m3.metadata.MetadataMessage.M3Environment.system_information:type_name -> dolittle.integrations.m3.metadata.MetadataMessage.SystemInformation
	0,  // 32: dolittle.integrations.m3.metadata.MetadataMessage.TableMetadata.ColumnMetadata.type:type_name -> dolittle.integrations.m3.metadata.MetadataMessage.TableMetadata.ColumnMetadata.FieldType
	16, // 33: dolittle.integrations.m3.metadata.MetadataMessage.TableMetadata.Index.columns:type_name -> dolittle.integrations.m3.metadata.MetadataMessage.TableMetadata.Index.IndexColumn
	17, // 34: dolittle.integrations.m3.metadata.MetadataMessage.TableMetadata.ForeignKey.key:type_name -> dolittle.integrations.m3.metadata.MetadataMessage.TableMetadata.ForeignKey.ForeignKeyRelation
	1,  // 35: dolittle.integrations.m3.metadata.MetadataMessage.TableMetadata.Index.IndexColumn.direction:type_name -> dolittle.integrations.m3.metadata.MetadataMessage.TableMetadata.Index.IndexColumn.SortDirection
	35, // 36: dolittle.integrations.m3.metadata.MetadataRequest.ByDataType.identifiers:type_name -> dolittle.integrations.m3.metadata.MetadataRequest.ByDataType.Tag
	37, // [37:37] is the sub-list for method output_type
	37, // [37:37] is the sub-list for method input_type
	37, // [37:37] is the sub-list for extension type_name
	37, // [37:37] is the sub-list for extension extendee
	0,  // [0:37] is the sub-list for field type_name
}

func init() { file_M3_Metadata_Metadata_proto_init() }
func file_M3_Metadata_Metadata_proto_init() {
	if File_M3_Metadata_Metadata_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_M3_Metadata_Metadata_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataMessage_TableMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataMessage_ProgramMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataMessage_DeploymentStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataMessage_DeploymentMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataMessage_DeploymentSystemMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataMessage_SystemInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataMessage_M3Environment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataMessage_M3EnvironmentColumnDiffs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataMessage_M3EnvironmentTableDiffs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataMessage_TableMetadata_ColumnMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataMessage_TableMetadata_Index); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataMessage_TableMetadata_ForeignKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataMessage_TableMetadata_Index_IndexColumn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataMessage_TableMetadata_ForeignKey_ForeignKeyRelation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataMessage_ProgramMetadata_TableUsage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataMessage_DeploymentStatus_Failure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataMessage_M3Environment_Table); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataMessage_M3Environment_Program); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataRequest_Deployment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataRequest_DeploymentSystems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataRequest_Tables); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataRequest_Table); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataRequest_Programs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataRequest_Program); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataRequest_Environment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataRequest_EnvironmentTableDiffs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataRequest_EnvironmentColumnDiffs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataRequest_Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataRequest_Cancel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataRequest_CancelAll); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataRequest_ByDataType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_M3_Metadata_Metadata_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataRequest_ByDataType_Tag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_M3_Metadata_Metadata_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*MetadataMessage_DeploymentMetadata_)(nil),
		(*MetadataMessage_M3Environment_)(nil),
		(*MetadataMessage_TableMetadata_)(nil),
		(*MetadataMessage_M3EnvironmentTableDiffs_)(nil),
		(*MetadataMessage_M3EnvironmentColumnDiffs_)(nil),
		(*MetadataMessage_DeploymentStatus_)(nil),
		(*MetadataMessage_ProgramMetadata_)(nil),
		(*MetadataMessage_DeploymentSystemMetadata_)(nil),
	}
	file_M3_Metadata_Metadata_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*MetadataRequest_DeploymentRequest)(nil),
		(*MetadataRequest_M3EnvironmentRequest)(nil),
		(*MetadataRequest_TablesMetadataRequest)(nil),
		(*MetadataRequest_M3EnvironmentDiffsRequest)(nil),
		(*MetadataRequest_ByDataType_)(nil),
		(*MetadataRequest_StatusRequest)(nil),
		(*MetadataRequest_M3EnvironmentColumnDiffsRequest)(nil),
		(*MetadataRequest_ProgramsMetadataRequest)(nil),
		(*MetadataRequest_ProgramMetadataRequest)(nil),
		(*MetadataRequest_TableMetadataRequest)(nil),
		(*MetadataRequest_DeploymentSystemsRequest)(nil),
		(*MetadataRequest_CancelRequest)(nil),
		(*MetadataRequest_CancelAllRequest)(nil),
	}
	file_M3_Metadata_Metadata_proto_msgTypes[4].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_M3_Metadata_Metadata_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_M3_Metadata_Metadata_proto_goTypes,
		DependencyIndexes: file_M3_Metadata_Metadata_proto_depIdxs,
		EnumInfos:         file_M3_Metadata_Metadata_proto_enumTypes,
		MessageInfos:      file_M3_Metadata_Metadata_proto_msgTypes,
	}.Build()
	File_M3_Metadata_Metadata_proto = out.File
	file_M3_Metadata_Metadata_proto_rawDesc = nil
	file_M3_Metadata_Metadata_proto_goTypes = nil
	file_M3_Metadata_Metadata_proto_depIdxs = nil
}
